float average(float values[], int n_vals){    int i;    float res=0;    for(i=0;i<n_vals;i++)        res+=values[i];    return (res/n_values);
float average(float values[], int n_vals){    int i;    float res=0;    for(i=0;i<n_vals;i++)        res+=values[i];    return (res/n_values);}
float average(float values[], int n_vals){    int i;    float res=0;    for(i=0;i<n_vals;i++)        res+=values[i];    return (res/n_vals);}
float average(float values[], int n_values){        float avg = 0;        for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values}
float average(float values[], int n_values){        float avg = 0;        for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg =  2;        for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg =  2;        for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg =  2;        for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg =  2;        for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg =  2;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 0;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 0;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 0;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 0;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
print("prout")def average(*param):    return sum(*param)/len(*param)
def average(*param):    return sum(*param)/len(*param)
def float average(*param):    return sum(*param)/len(*param)
float average(*param):    return sum(*param)/len(*param)
def average(*param):    return sum(*param)/len(*param)
def average(param1, param2):    return sum(param1)/param2
float average(float values[], int n_values) {    int sum = 0;for (c = 0; c <= n_values; c++)  {    sum = sum + values[c];  }    return sum}
float average(float values[], int n_values) {    int sum = 0;for (int c = 0; c <= n_values; c++)  {    sum = sum + values[c];  }    return sum}
float average(float values[], int n_values) {    int sum = 0;    for (int c = 0; c <= n_values; c++) {        sum = sum + values[c];    }    return sum}
float average(float values[], int n_values) {    int sum = 0;    for (int c = 0; c <= n_values; c++) {        sum = sum + values[c];    }    return sum}
float average(float values[], int n_values) {    float sum = 0;    for (int c = 0; c <= n_values; c++) {        sum = sum + values[c];    }    return sum}
float average(float values[], int n_values) {    float sum = 0;    for (int c = 0; c < n_values; c++) {        sum = sum + values[c];    }    return sum}
float average(float values[], int n_values) {    float sum = 0;    for (int c = 0; c < n_values; c++) {        sum = sum + values[c];    }    return sum}
float average(float values[], int n_values) {    float sum = 0;    for (int c = 0; c < n_values; c++) {        sum = sum + values[c];    }    return sum}
float average(float values[], int n_values) {    float sum = 0;    for (int c = 0; c < n_values; c++) {        sum = sum + values[c];    }    return sum}
float average(float values[], int n_values) {    float sum = 0;    for(int i = 0; i<n_values; i++){        sum += values[i];    }    return sum / n_values;}
float average(float values[], int n_values){        float avg = 0;    for (i=0;i<n_values;i++0){        avg = avg+values[i];    }    printf('avg=%f\n', avg);    return avg/n_values;}
float average(float values[], int n_values){        float avg = 0;    for (int i=0;i<n_values;i++0){        avg = avg+values[i];    }    printf('avg=%f\n', avg);    return avg/n_values;}
float average(float values[], int n_values){        float avg = 0;    for (int i=0;i<n_values;i++0){        avg = avg+values[i];    }    //printf('avg=%f\n', avg);    return avg/n_values;}
float average(float values[], int n_values){        float avg = 0;    for (int i=0;i<n_values;i++){        avg = avg+values[i];    }    //printf('avg=%f\n', avg);    return avg/n_values;}
float average(float values[], int n_values){        float avg = 0;    for (int i=0;i<n_values;i++){        avg = avg+values[i];    }    printf('avg=%f\n', avg);    return avg/n_values;}
float average(float values[], int n_values){        float avg = 0;    for (int i=0;i<n_values;i++){        avg = avg+values[i];    }    printf("avg=%f\n", avg);    return avg/n_values;}
float average(float values[], int n_values){        float avg = 0;    for (int i=0;i<n_values;i++){        avg = avg+values[i];    }    printf("avg=%f\n", avg);    return avg/n_values;}
float average(float values[], int n_values){        float avg = 0;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 0;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 0;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 0;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 3;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 3;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 3;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values){        float avg = 3;            for (int i = 0; i < n_values; i++){            avg = avg + values[i];    }        return avg / n_values;}
float average(float values[], int n_values) {    double moyenne(0);     for(int i(0); i<n_values; ++i)    {       moyenne += notes[i];   //On additionne toutes les notes    }    return moyenne /= n_values;   }
float average(float values[], int n_values){    int taille_tab = sizeof(values)/sizeof(values[0]);    for(i = 0; i < taille_tab; i++){        n_values += values[i];    }        return n_values/taille_tab;}
float average(float values[], int n_values) {    double moyenne(0);     for(int i(0); i<n_values; ++i)    {       moyenne += notes[i];    return moyenne /= n_values;   }
float average(float values[], int n_values) {    float moyenne(0);     for(int i(0); i<n_values; ++i)    {       moyenne += notes[i];    }    return moyenne /= n_values;   }
float average(float values[], int n_values) {    float moyenne;     for(int i(0); i<n_values; ++i)    {       moyenne += notes[i];    }    return moyenne /= n_values;   }
float average(float values[], int n_values){    int taille_tab = sizeof(values);    for(i = 0; i < taille_tab; i++){        n_values += values[i];    }        return n_values/taille_tab;}
float average(float values[], int n_values) {    float moyenne;     for(int i(0); i<n_values; ++i)    {       moyenne += values[i];    }    return moyenne /= n_values;   }
float average(float values[], int n_values){    int somme;    for (int i = 0; i< n_values ; i++)        somme = values[i];    float moyenne = somme / n_values;    printf("%f\n",moyenne);    }
float average(float values[], int n_values) {    float moyenne;     for(int i(0); i<n_values; ++i)    {       moyenne += values[i];    }    return moyenne / n_values;   }
float average(float values[], int n_values) {    int somme = 0;    for(int i = 0; i < n_values; i++) {        somme = somme + values[i];    }    return somme / n_values;}
float average(float values[], int n_values){    int taille_tab = sizeof(values)/sizeof(values[0]);    for(i = 0; i < taille_tab; i++){        n_values += values[i];    }        return n_values/taille_tab;}
float average(float values[], int n_values){    int somme=0;    for (int i = 0; i< n_values ; i++)        somme = values[i];    float moyenne = somme / n_values;    printf("%f\n",moyenne);    }
float average(float values[], int n_values){    int taille_tab = sizeof(values)/sizeof(values[0]);    for(int i = 0; i < taille_tab; i++){        n_values += values[i];    }        return n_values/taille_tab;}
float average(float values[], int n_values) {        sum = 0;        for(int i = 0; i < n_values; i++)    {        sum += values[i];    }        return sum / n_values;    }
float average(float values[], int n_values) {        int sum = 0;        for(int i = 0; i < n_values; i++)    {        sum += values[i];    }        return sum / n_values;    }
float average(float values[], int n_values){    int i;    float result = 0;    for(i = 0; i < n_values; i++){        result = result + values[i];    }    result = result / n_values;    return result;}
float average(float values[], int n_values) {    float moyenne;    printf(n_values);     for(int i(0); i<n_values; ++i)    {       moyenne += values[i];    }    return moyenne / n_values;   }
float average(float values[], int n_values) {        float sum = 0;        for(int i = 0; i < n_values; i++)    {        sum += values[i];    }        return sum / n_values;    }
float average(float values[], int n_values){    for(i=1, i<= n_values, i++) {        sum = sum + values[];    }    return sum/n_values;}
float average(float values[], int n_values){    int sum = 0;    for(i=1, i<= n_values, i++) {        sum = sum + values[];    }    return sum/n_values;}
float average(float values[], int n_values){    float somme = 0;        for(int i = 0; i < n_values; i++){        somme += values[i];    }        return somme/n_values;}
float average(float values[], int n_values){    int sum = 0;    int i = 1;    for(i=1, i<= n_values, i++) {        sum = sum + values[];    }    return sum/n_values;}
float average(float values[], int n_values){    int somme=0;    for (int i = 0; i< n_values ; i++)        somme = values[i];    return somme / n_values;}
float average(float values[], int n_values){    int sum = 0;    int i = 1;    for(i=1; i<= n_values; i++) {        sum = sum + values[];    }    return sum/n_values;}
float average(float values[], int n_values) {    int somme = 0;    for(int i = 0; i <= n_values; i++) {        somme = somme + values[i];    }    return somme / n_values;}
float average(float values[], int n_values) {    int somme = 0;    for(int i = 0; i < n_values; i++) {        somme = somme + values[i];    }    return somme / n_values;}
float average(float values[], int n_values) {    int somme = 0;    for(int i = 0; i < n_values; i++) {        somme = somme + values[i];    }    return somme / n_values;}
float average(float values[], int n_values) {    int somme = 0;    for(int i = 0; i < n_values; i++) {        somme = somme + values[i];    }    return somme / n_values;}
float average(float values[], int n_values) {    int res=0;    for (int i=0, i<n_values, i++) {        res= res+ values[i];    }    res=res/n_values    return res}
float average(float values[], int n_values) {    float somme = 0.0;    for(int i = 0; i < n_values; i++) {        somme = somme + values[i];    }    return somme / n_values;}
float average(float values[], int n_values) {    int res=0;    for (int i=0; i<n_values; i++) {        res= res+ values[i];    }    res=res/n_values    return res;}
float average(float values[], int n_values) {    int res=0;    for (int i=0; i<n_values; i++) {        res= res+ values[i];    }    res=res/n_values;    return res;}
float average(float values[], int n_values) {    float sum, avg;    n = sizeof(values) / sizeof(values[0]);    for(i = 0; i < n; i++)    sum += num[i];    avg = sum / n;    return avg;   }
float average(float values[], int n_values) {    float res=0;    for (int i=0; i<n_values; i++) {        res= res+ values[i];    }    res=res/n_values;    return res;}
float average(float values[], int n_values) {    float avg;    n = sizeof(values) / sizeof(values[0]);    for(i = 0; i < n; i++)    sum += num[i];    avg = sum / n;    return avg;   }
float average(float values[], int n_values) {    float avg;    float sum;    n = sizeof(values) / sizeof(values[0]);    for(i = 0; i < n; i++)    sum += num[i];    avg = sum / n;    return avg;   }
float average(float values[], int n_values){    int somme=0;    for (int i = 0; i < n_values ; i++)        somme = somme+ values[i];    return somme / n_values;}
float average(float values[], int n_values){    float somme=0;    for (int i = 0; i < n_values ; i++)        somme = somme + values[i];    return somme / n_values;}
float average(float values[], int n_values) {    float avg;    float sum;    int n = sizeof(values) / sizeof(values[0]);    for(int i = 0; i < n; i++)    sum += num[i];    avg = sum / n;    return avg;   }
float average(float values[], int n_values) {    float sum = 0.0, avg;    int n = sizeof(values) / sizeof(values[0]);    for(int i = 0; i < n; i++)    sum += values;    avg = sum / n;    return avg;   }
float average(float values[], int n_values){    int sum = 0;    int i = 1;    for(i=1; i<= n_values; i++) {        sum = sum + values[i];    }    return sum/n_values;}
float average(float values[], int n_values){    float sum = 0;    int i = 1;    for(i=1; i<= n_values; i++) {        sum = sum + values[i];    }    return sum/n_values;}
float average(float values[], int n_values){    float sum = 0;        for(int i=0; i < n_values; i++) {        sum += values[i];    }    return sum/n_values;}
float average(float values[], int n_values) {    float moy;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy/n_values;}
float average(float values[], int n_values) {    float moy;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy;}
float average(float values[], int n_values) {    float moy;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy/n_values;}
float average(float values[],int n_values){    }
float average(float values[], int n_values) {    float moy;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy/n_values;}
float average(float values[], int n_values) {    float moy;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy/n_values;}
float average(float values[], int n_values) {    float moy;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy/n_values;}
float average(float values[], int n_values) {    float moy;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy/n_values;}
float average(float values[], int n_values) {    float moy;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy/n_values;}
float average(float values[], int n_values){    }
float average(float values[], int n_values) {    float tab = [];        }
float average(float values[], int n_values) {    float moy = 0;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy/n_values;}
float average(float values[],int n_values){    int i;    int r=0;    for(i=0;i<n_values,i++)    {        r=r+values[i];    }    r=r/n_values;    return r;}
float average(float values[],int n_values){    int i;    int r=0;    for(i=0;i<n_values;i++)    {        r=r+values[i];    }    r=r/n_values;    return r;}
float average(float values[],int n_values){    int i;    float r=0;    for(i=0;i<n_values;i++)    {        r=r+values[i];    }    r=r/n_values;    return r;}
float average(float values[], int n_values){    int average=0;    for (int i=0; i< n_values; i++){        average = average + values[i];    }        average = average/n_values;    return average;}
float average(float values[], int n_values){    float average=0;    for (int i=0; i< n_values; i++){        average = average + values[i];    }        average = average/n_values;    return average;}
float average(float values[], int n_values) {    float tab[n_values] = {values};    int add;    float moy;    for(i = 0; i < n_values; i++) {      add = add + tab[i];    }        moy = add / i;        return moy;    }
float average(float values[], int n_values){    float res = 0;    float moy;    for (int i=0;i<=n_values;i++){        res = res+values[i];    }    return moy = res/n_values;    }
float average(float values[], int n_values) {    float tab[n_values] = {values};    float add;    float moy;    for(i = 0; i < n_values; i++) {      add = add + tab[i];    }        moy = add / i;        return moy;    }
float average(float values[], int n_values) {    float tab[n_values] = {values};    float add;    float moy;    int i;    for(i = 0; i < n_values; i++) {      add = add + tab[i];    }        moy = add / i;        return moy;    }
float average(float values[], int n_values) {    tab[n_values] = {values};    float add;    float moy;    int i;    for(i = 0; i < n_values; i++) {      add = add + tab[i];    }        moy = add / i;        return moy;    }
float average(float values[], int n_values) {    int tab[n_values] = {values};    float add;    float moy;    int i;    for(i = 0; i < n_values; i++) {      add = add + tab[i];    }        moy = add / i;        return moy;    }
float average(float values[], int n_values){    float resultat=0;    float moyenne;    for(float i=0; i<=n_values;i++){                resultat = resultat+values[i];            }    moyenne = resultat/n_values;    return moyenne}
float average(float values[], int n_values){    float resultat=0;    float moyenne;    for(int i=0; i<=n_values;i++){                resultat = resultat+values[i];            }    moyenne = resultat/n_values;    return moyenne}
float average(float values[], int n_values){    float resultat=0;    float moyenne;    for(int i=0; i<=n_values;i++){                resultat = resultat+values[i];            }    moyenne = resultat/n_values;    return moyenne;}
float average(float values[], int n_values) {    float res = 0;    for(int=i=0 ; i < n_values ; i++){        res = res = values[i];    }    res = res%i;    return res ;}
float average(float values[], int n_values) {    float res = 0;    for(float=i=0 ; i < n_values ; i++){        res = res = values[i];    }    res = res%i;    return res ;}
float average(float values[], int n_values) {    float res = 0;    for(int=i=0 ; i < n_values ; i++){        res = res = values[i];    }    res = res%i;    return res ;}
float average(float values[], int n_values) {    float res = 0;    for(int=i=0 ; i <= n_values ; i++){        res = res = values[i];    }    res = res%i;    return res ;}
float average(float values[], int n_values) {    float res = 0;    float moyenne ;    for(int=i=0 ; i <= n_values ; i++){        res = res = values[i];    }    moyenne = res%n_values;    return res ;}
float average(float values[], int n_values) {    float res = 0;    float moyenne =0;    for(int=i=0 ; i <= n_values ; i++){        res = res = values[i];    }    moyenne = res%n_values;    return res ;}
float average(float values[], int n_values) {    int tab[n_values] = {values};    float add;    float moy;    int i;    for(i = 0; i < n_values; i++) {      add = add + tab[i];    }        moy = add / i;        return moy;    }
float average(float values[],int n_values){    int i;    float r=0;    for(i=0;i<n_values;i++)    {        r=r+values[i];    }    r=r/n_values;    return r;}
float average(float values[], int n_values) {    int tab[n_values] = {values};    float add;    float moy;    int i;    for(i = 0; i < n_values; i++) {      add = add + tab[i];    }        moy = add / n_values;        return moy;    }
float average(float values[], int n_values) {    float add;    float moy;    int i;    for(i = 0; i < n_values; i++) {      add = add + tab[i];    }        moy = add / n_values;        return moy;    }
float average(float values[], int n_values) {    float add;    float moy;    int i;    for(i = 0; i < n_values; i++) {      add = add + values[i];    }        moy = add / n_values;        return moy;    }
float average(float values[], int n_values) {    float add = 0;    float moy;    int i;    for(i = 0; i < n_values; i++) {      add = add + values[i];    }        moy = add / n_values;        return moy;    }
float average(float values[], int n_values) {    float res = 0;    float moyenne =0;    for(int=i=0 ; i <= n_values ; i++){        res = res + values[i];    }    moyenne = res%n_values;    return res ;}
float average(float values[], int n_values) {    float res = 0;    float moyenne =0;    for(int=i=0 ; i <= n_values ; i++){        res = res + values[i];    }    moyenne = res%n_values;    return res ;}
float average(float values[], int n_values) {    float res ;    float moyenne =0;    for(int=i=0 ; i <= n_values ; i++){        res = res + values[i];    }    moyenne = res%n_values;    return res ;}
float average(float values[], int n_values) {    float res = 0 ;    float moyenne =0;    for(int=i=0 ; i <= n_values ; i++){        res = res + values[i];    }    moyenne = res%n_values;    return moyenne ;}
float average(float values[], int n_values) {    float res = 0 ;    float moyenne =0;    for(int=i=0 ; i < n_values ; i++){        res = res + values[i];    }    moyenne = res%n_values;    return moyenne ;}
float average(float values[], int n_values) {    float res = 0 ;    float moyenne =0;    for(int=i=0 ; i > n_values ; i++){        res = res + values[i];    }    moyenne = res%n_values;    return moyenne ;}
float average(float values[], int n_values) {    for(int i=0; i>n_values; i++) {        moy = moy + values[i];    }    return moy/n_values;}
float average(float values[], int n_values) {    float res = 0 ;    float moyenne =0;    for(int i=0 ; i < n_values ; i++){        res = res + values[i];    }    moyenne = res%n_values;    return moyenne ;}
float average(float values[], int n_values){    int s = 0, i;           for(i = 0; i <= n_values; i++)         {            s = s + values[i];        }      moy = (float)s / i;   return moy;}
float average(float values[], int n_values){    int s = 0, i;           for(i = 0; i <= n_values; i++)         {            s = s + values[i];        }      moy = (float)s / i;      return moy;}
float average(float values[], int n_values) {    int moy;    for(int i=0; i>n_values; i++) {        moy = moy + values[i];    }    return moy/n_values;}
float average(float values[], int n_values) {    float res = 0 ;    float moyenne =0;    for(int i=0 ; i < n_values ; i++){        res = res + values[i];    }    moyenne = res / n_values;    return moyenne ;}
float average(float values[], int n_values) {    int i; float resultat = 0;        for(i=0; i<n_values; i++) {        resultat = values[i]    }    resultat /= n_values;}
float average(float values[], int n_values) {    int i; float resultat = 0;        for(i=0; i<n_values; i++) {        resultat = values[i];    }    resultat /= n_values;}
float average(float values[]){        //les tableaux et les boucles        float supernombre; // je crée une variable de type float        float tableaunombre[5]; // ne peut pas etre retourne    tableaunombre[0] = 3;    tableaunombre[1] = 2;    tableaunombre[2] = -1;        //malloc = allocation dynamique        int n_elem = 5;    float* tableau dynamique = (float*) malloc(sizeof(float) * n_elem);}
float average(float values[], int n_values) {    float resultat = 0;        for(int i=0; i<n_values; i++) {        resultat += values[i];    }    resultat /= n_values;}
float average(float values[], int n_values) {    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    return moy/n_values;}
float average(float values[], int n_values){    int s = 0, i,moy;           for(i = 0; i <= n_values; i++)         {            s = s + values[i];        }      moy = (float)s/i;      return moy;}
float average(float values[], int n_values){    int somme = 0, i,moy;           for(i = 0; i <= n_values; i++)         {            somme = somme + values[i];        }      moy = somme/i;      return moy;}
float average(float values[], int n_values = 5){    int somme = 0, i,moy;           for(i = 0; i <= n_values; i++)         {            somme = somme + values[i];        }      moy = somme/i;      return moy;}
float average(float values[], int n_values = 5){    int somme = 0, i,moy;           for(i = 0; i <= n_values; i++)         {            somme = somme + values[i];        }      moy = (float)somme/i;      return moy;}
float average(float values[], int n_values) {    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values){    int somme = 0, i;    float moy;           for(i = 0; i <= n_values; i++)         {            somme = somme + values[i];        }      moy = (float)somme/i;      return moy;}
float average(float values[], int n_values){    int somme = 0, i;    float moy;           for(i = 0; i < n_values; i++)         {            somme = somme + values[i];        }      moy = (float)somme/i;      return moy;}
float average(float values[], int n_values) {    float* tableaudynamique = (float*) malloc(siezof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return n_values;}
float average(float values[], int n_values){    int somme = 0, i;    float moy;           for(i = 0; i < n_values; i++)         {            somme = somme + values[i];        }      moy = (float)somme/n_values;      return moy;}
float average(float values[], int n_values) {    float* tableaudynamique = (float*) malloc(siezof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return n_values;}
float average(float values[], int n_values) {    float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values){    int somme = 0, i;    float moy;           for(i = 0; i < n_values; i++)         {            somme = somme + values[i];        }      moy = somme/n_values;      return moy;}
float average(float values[], int n_values){    int  i;    float moy,somme = 0;           for(i = 0; i < n_values; i++)         {            somme = somme + values[i];        }      moy = somme/n_values;      return moy;}
float average(float values[], int n_values) {    float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return n_values;}
float average(float values[], int n_values){    int  i;    float moy = 0 ,somme = 0;           for(i = 0; i < n_values; i++)         {            somme = somme + values[i];        }      moy = somme/n_values;      return moy;}
float average(float values[], int n_values) {    float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values){    float total = 0;    float res;    for(int i = 0; i<n_values;i++){                total = total + values[i];                           }        res = total/n_values;    return res;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    for(int i=0; i<n_values; i++) {        moy = moy + values[i];    }    moy = moy/n_values;    return moy;}
float average(float values[], int n_values){       //alocation dynamique    float total = 0;    float resultat;            for(int i = 0; i < n_values; i++){        total = total + values[i];    }    res = total/n_values;    return resultat;            }
float average(float values[], int n_values){       //alocation dynamique    float total = 0;    float resultat;            for(int i = 0; i < n_values; i++){        total = total + values[i];    }    resultat = total/n_values;    return resultat;            }
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    if(n_values>0) {        int moy;        for(int i=0; i<n_values; i++) {            moy = moy + values[i];        }        moy = moy/n_values;        return moy;    }}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    if(n_values>0) {        int moy;        for(int i=0; i<n_values; i++) {            moy = moy + values[i];            return values[i];        }        moy = moy/n_values;        return moy;    }}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    if(n_values>0) {        int moy;        for(int i=0; i<n_values; i++) {            moy = moy + values[i];        }        moy = moy/n_values;        return moy;    }}
float average(float values[]){        float supernombre;        float tableaunombre[5];    tableaunombre[0] = 3;    tableaunombre[1] = 2;    tableaunombre[2] = -1;        int n_elem = 5;    float* tableaudynamique = (float*) malloc(sizeof(float) * n_elem);        for(int index = 0; index < n_elem; index + 1){        printf("%f\n", tableaudynamique[index]);    }    }
If ( n = 0 || n=1){		return n=1 ;		}else{				return n=0 ;		}		for (i =1 ; i = 1>n ; i++){	resultat = resultat*i		}	return n ;
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    if(n_values>0) {        for(int i=0; i<=n_values; i++) {            moy = moy + values[i];        }        moy = moy/n_values;        return moy;    }}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    if(n_values>0) {        for(int i=0; i<=n_values-1; i++) {            moy = moy + values[i];        }        moy = moy/n_values;        return moy;    }}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy;    if(n_values>0) {        for(int i=0; i<n_values-1; i++) {            moy = moy + values[i];        }        moy = moy/n_values;        return moy;    }}
long factorial(long n){	If ( n = 0 || n=1){		return n=1 ;		}else{				return n=0 ;		}		for (int i =1 ; i <n ; i++){	resultt = resultat*i		}	return result ;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    int moy=0;    if(n_values>0) {        for(int i=0; i<=n_values; i++) {            moy = moy + values[i];        }        moy = moy/n_values;        return moy;    }}
long factorial(long n){	If ( n = 0 or n=1){		return n=1 ;		}else{				return n=0 ;		}		for (int i =1 ; i <n ; i++){	resultt = resultat*i		}	return result ;}
float average(float values[], int n_values) {    //float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    float moy=0;    if(n_values>0) {        for(int i=0; i<=n_values; i++) {            moy = moy + values[i];        }        moy = moy/n_values;        return moy;    }}
float average(float values[], int n_values) {    float* tableaudynamique = (float*) malloc(sizeof(float) * n_values);    float moy=0;    if(n_values>0) {        for(int i=0; i<=n_values; i++) {            moy = moy + values[i];        }        moy = moy/n_values;        return moy;    }}
long factorial(long n){	If ( n = 0 or n=1){		return n=1 ;		}else{				return n=0 ;		}		for (int i =1 ; i <n ; i++){	resultt = resultat*i		}	return result ;}
long factorial(long n){	If ( n = 0 or n=1){		return n=1 ;		}else{				return n=0 ;		}		for (int i =1 ; i <n ; i++){	result = resultat*i		}	return result ;}
long factorial(long n){	if ( n = 0 or n=1){		return n=1 ;		}else{				return n=0 ;		}		for (int i =1 ; i <n ; i++){	result = resultat*i		}	return result ;}
long factorial(long n){	if ( n = 0 or n=1){		return result=1 ;		}else{				return result=0 ;		}		for (int i =1 ; i <n ; i++){	result = resultat*i		}	return result ;}
float average(float values[],int n_values){    float values[n];float s = 0 ;float m = 0;for(i=0,i<n,i++){    s = s + values[i];}m = s/i;return m
float average(float values[n],int n_values){    float values[n];float s = 0 ;float m = 0;for(i=0,i<n,i++){    s = s + values[i];}m = s/i;return m
float average(float values[],int n_values){    float values[n];float s = 0 ;float m = 0;for(i=0,i<n,i++){    s = s + values[i];}m = s/i;return m
float average(float values[],int n_values){    float values[n];float s = 0 ;float m = 0;int i;for(i=0,i<n,i++){    s = s + values[i];}m = s/i;return m
float average(float values[],int n_values){int n;    float values[n];float s = 0 ;float m = 0;int i;for(i=0,i<n,i++){    s = s + values[i];}m = s/i;return m
float average(float values[],int n_values){int n;    float values[n];float s = 0 ;float m = 0;int i;for(i=0,i<n,i++){    s = s + values[i];}m = s/i;return m}
float average(float values[],int n_values){    int n;        float s = 0 ;    float m = 0;    int i;        for(i=0,i<n,i++){        s = s + values[i];    }    m = s/i;    return m;}
float average(float values[],int n_values){    int n;        float s = 0 ;    float m = 0;    int i;        for(i=0;i<n;i++){        s = s + values[i];    }    m = s/i;    return m;}
float average(float values[],int n_values){           float s = 0 ;    float m = 0;    int i;        for(i=0;i<n_values;i++){        s = s + values[i];    }    m = s/i;    return m;}
float average(float values[], int n_values) {        int result = values[]/n_values;        }
float average(float values[], int n_values) {        float result = 0;    for (int i = 0; i < values[]; i++)        }
float average(float values[], int n_values) {        float result = 0;    for (int i = 0; i < values[]; i++){            }        }
float average(float values[], int n_values) {        float result = 0;    for (int i = 0; i < values; i++){            }        }
float average(float values[], int n_values) {        float result = 0;        for (int i = 0; i < n_values; i++){        return result = values[]/n-values;    }        }
float average(float values[], int n_values) {        float result = 0;        for (int i = 0; i < n_values; i++){        return result = values[]/n_values;    }        }
float average(float values[],int n_values){    int i;    float r=0;    for(i=0;i<n_values;i++)    {        r=r+values[i];    }    r=r/n_values;    return r;}
float average(float values[], int n_values) {    float moy = 0;    for (int i = 0; i < n_values; i++){        moy += values[i];    }    return moy/n_values;}
float average(float values[], int n_values) {        float result = 0;        for (int i = 0; i < n_values; i++){        return result = values[]/n_values;    }        }
float average(float values[], int n_values) {        float result = 0;        for (int i = 0; i < n_values; i++){         result = values[]/n_values;    }return result;        }
float average(float values[], int n_values) {    int i;    float total;    total = 0;    for(i=0; i< n_values; i++){        total += n_values[i];    }    total = total / n_values;}
float average(float values[], int n_values) {    int i;    float total;    total = 0;    for(i=0; i< n_values; i++){        total += n_values[i];    }    return total = total / n_values;}
float average(float values[], int n_values) {    int i;    float total;    total = 0;    for(i=0; i< n_values; i++){        total += values[i];    }    total = total / n_values;    return total;}
long factorial(long n){	if ( n = 0 or n=1){		return result=1;		}else{				return result=0;		}		for (int i=1; i <n; i++){	result = resultat*i		}	return result;}
float average(float values[], int n_values){    int somme, longueur=10;      float moyenne;      int tab[10]={1,2,3,4,5,6,7,8,9,10};      int  i;      somme=0;      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];      }      moyenne = (float)somme / (float)longueur;      printf("%f\n",moyenne);      return 0;}
float average(float values[], int n_values){    int somme, longueur=10;      float moyenne;      float tab[10]={1,2,3,4,5,6,7,8,9,10};      int  i;      somme=0;      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];      }      moyenne = (float)somme / (float)longueur;      printf("%f\n",moyenne);      return 0;}
float average(float values[], int n_values){        float result = 0;    for(index = 0; index < n_values; index++){        result = result + values[index];    }    result = result / n_values;    return result;    }
float average(float* values[], int n_values){        float result = 0;    for(index = 0; index < n_values; index++){        result = result + values[index];    }    result = result / n_values;    return result;    }
float* average(float values[], int n_values){        float result = 0;    for(index = 0; index < n_values; index++){        result = result + values[index];    }    result = result / n_values;    return result;    }
float average(float values[], int n_values){    int somme;      float moyenne;      int  i;      somme=0;      for (i=0 ; i< n_values ; i++)      {          somme += tab[i];      }      moyenne = (float)somme / (float)longueur;      printf("%f\n",moyenne);      return moyenne;}
float* average(float values[], int n_values){        float result = 0;    for(int index = 0; index < n_values; index++){        result = result + values[index];    }    result = result / n_values;    return result;    }
float average(float values[], int n_values){    int somme;      float moyenne;      int  i;      somme=0;      for (i=0 ; i< n_values ; i++)      {          somme += values[i];      }      moyenne = (float)somme / (float)longueur;      printf("%f\n",moyenne);      return moyenne;}
float average(float values[], int n_values){        float result = 0;    for(int index = 0; index < n_values; index++){        result = result + values[index];    }    result = result / n_values;    return result;    }
float average(float values[], int n_values){    int somme;      float moyenne;      int  i;      somme=0;      for (i=0 ; i< n_values ; i++)      {          somme += values[i];      }      moyenne = (float)somme / (float)n_values;      printf("%f\n",moyenne);      return moyenne;}
float average(float values[], int n_values){    float somme;      float moyenne;      int  i;      somme=0;      for (i=0 ; i< n_values ; i++)      {          somme += values[i];      }      moyenne = somme / (float)n_values;      printf("%f\n",moyenne);      return moyenne;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res / n_values;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res / n_values;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res;}
float average(float values [], int n_values){    int i, av;    for(i=0;i<=n_values;i++)    {        av+=values[i];    }    av=av/n_values;    return av;}
float average(float values [], int n_values){    int i, av=0;    for(i=0;i<=n_values;i++)    {        av+=values[i];    }    av=av/n_values;    return av;}
float average(float values [], int n_values){    int i, av=0;    for(i=0;i<=n_values;i++)    {        av+=values[i];    }    av=av/n_values;    return av;}
float average(float values [], int n_values){    int i;    float av=0;    for(i=0;i<=n_values;i++)    {        av+=values[i];    }    av=av/n_values;    return av;}
float average(float values[], int n_values) {        float sum = 0.0f;    float mean;    int i;        for (i=0; i<n_values, i++) {        sum += values[i];    }        mean = sum / n_values;        return(mean);}
float average(float values[], int n_values) {        float sum = 0.0f;    float mean;    int i;        for (i=0; i<n_values; i++) {        sum += values[i];    }        mean = sum / n_values;        return(mean);}
#include <stdio.h>void float average(float values[], int n_values){    int i = 0;    float average;    for(i; i<n_values; i++)        average += values[i]    return average;}
float average (float values, int n_values){    float avrg=0;    for (int i=0; i<n_values; i++){        avrg+=values[i]:}    avrg/=n_values;    return avrg;}
#include <stdio.h>void float average(float values[], int n_values){    int i = 0;    float average;    for(i; i<n_values; i++)        average += values[i];    return average;}
#include <stdio.h>void average(float values[], int n_values){    int i = 0;    float average;    for(i; i<n_values; i++)        average += values[i];    return average;}
#include <stdio.h>void average(float values[], int n_values){    int i = 0;    float average;    for(i; i<n_values; i++)        average += values[i];    return average;}
#include <stdio.h>void float average(float values[], int n_values){    int i = 0;    float average;    for(i; i<n_values; i++)        average += values[i];    return average;}
#include <stdio.h>#include <stdlib.h>float average(float values[], int n_values){    int i;    float res = 0;    for (i = 0; i <= n_values; i++)        res += values[i];    return("%f\n", res/(n_values+1));}
float average(float values[], int n_values){    int cpt;    float average = 0;    for(cpt= 0; cpt <= n_values;cpt++)    {        average += values[cpt]    }    average = average / cpt    return average;}
float average(float values[], int n_values){    int cpt;    float average = 0;    for(cpt= 0; cpt <= n_values;cpt++)    {        average += values[cpt];    }    average = average / cpt    return average;}
float average(float values[], int n_values){    int cpt;    float average = 0;    for(cpt= 0; cpt <= n_values;cpt++)    {        average += values[cpt];    }    average = average / cpt;    return average;}
float average(float values[], int n_values){    int cpt;    float average = 0;    for(cpt= 0; cpt <= n_values;cpt++)    {        average += values[cpt-1];    }    average = average / cpt;    return average;}
#include <stdio.h>#include <stdlib.h>float average(float values[], int n_values){    int i;    float res = 0;    for (i = 0; i <= n_values; i++)        res += values[i];    return("%f\n", res/(n_values));}
float average(float values[], int n_values){    int cpt;    float average = 0;    for(cpt= 0; cpt <= n_values;cpt++)    {        average += values[cpt];    }    average = average / cpt;    return average;}
float average(float values[], int n_values){    int cpt;    float average = 0;    for(cpt= 0; cpt <= n_values;cpt++)    {        average += values[cpt+1];    }    average = average / cpt;    return average;}
float average(float values[], int n_values){    int cpt;    float average = 0;    for(cpt= 0; cpt <= n_values;cpt++)    {        average += values[cpt+1];    }    average = average / cpt;    return cpt;}
float average(float values[], int n_values){    int cpt;    float average = 0;    for(cpt= 0; cpt <= n_values;cpt++)    {        average += values[cpt];    }    average = average / (cpt-1);    return average;}
float min_floats(float values[], int n_values){    float x;    x = 0;    for(int i = 1; i<n_values; i++){        x += values[i];    }    x = x/n_values;    return x;}
float average(float values[], int n_values){    float x;    x = 0;    for(int i = 1; i<n_values; i++){        x += values[i];    }    x = x/n_values;    return x;}
float average(float values[], int n_values){    float sum;    int cpt;    for (cpt = 0; cpt < n_values; cpt++){        sum += values[cpt];    }    return sum/n_values;}
float average(float values[], int n_values){    float sum = 0;    int cpt;    for (cpt = 0; cpt < n_values; cpt++){        sum += values[cpt];    }    return sum/n_values;}
float average (float values, int n_values){    float avrg=0;    for (int i=0; i<n_values; i++){        avrg+=values[i];}    avrg/=n_values;    return avrg;}
float average(float values[], int n_values){    float x;    x = 0;    for(int i = 0; i<n_values; i++){        x += values[i];    }    x = x/n_values;    return x;}
float average (float values, int n_values){    float avrg=0;    for (int i=0; i<n_values; i++){        avrg += values[i];}    avrg/=n_values;    return avrg;}
float average(float values[], int n_values) {        float sum = 0.0f;    float mean;    int i;        for (i=0; i<n_values; i++) {        sum += values[i];    }        mean = sum / n_values;        return(mean);}
float average (float values, int n_values){    float avrg=0;    for (int i=0; i<n_values; i++){        avrg += values[i];}    avrg/=(n_values+1);    return avrg;}
#include <stdio.h>void float average(float values[], int n_values){    int i;    float average;    for(i = 0; i<n_values; i++)        average += values[i];    return average;}
float average(float values[], int n_values) {        float sum = 0.0f;    float mean;    int i;        for (i=0; i<n_values; i++) {        sum += values[i];    }        mean = sum / n_values;        return(mean);}
#include<stdio.h>int main(){    int arr[100];    float average, values;    int n_values;    printf(" choose the size of the array");    scanf("%d", &n_values);    average = 0    for (values=0; values<n_values; values++)        average = average + arr[values];        values = values + 1;    return 0;}
#include <stdio.h>float average(float values[], int n_values){    int i;    float average;    for(i = 0; i<n_values; i++)        average += values[i];    return average;}
#include <stdio.h>float average(float values[], int n_values){    int i;    float average;    for(i = 0; i<n_values; i++)        average += values[i];    average = average/n_values    return average;}
#include <stdio.h>float average(float values[], int n_values){    int i;    float average;    for(i = 0; i<n_values; i++)        average += values[i];    average = average/n_values;    return average;}
float average (float values, int n_values){    float avrg=0;    for (int i=0; i<n_values; i++){        avrg += values[i];}    avrg/=(n_values);    return avrg;}
float average (float values, int n_values){    float avrg=0;    for (int i=0; i<n_values; i++){        avrg = avrg + values[i];}    avrg/=(n_values);    return avrg;}
float average (float values[], int n_values){    float avrg=0;    for (int i=0; i<n_values; i++){        avrg = avrg + values[i];}    avrg/=(n_values);    return avrg;}
#include <stdio.h>float min_floats(float values[], int n_values){    int i;    float average;    average = 0;    for (i=0;i<=n_values;i++){        average+=values[i];    }    average=(average/n_values);    return average;}
#include <stdio.h>float min_floats(float values[], int n_values){    int i;    float res;    res = 0;    for (i=0;i<=n_values;i++){        average+=values[i];    }    res=(average/n_values);    return res;}
#include <stdio.h>float min_floats(float values[], int n_values){    int i;    float res;    res = 0;    for (i=0;i<=n_values;i++){        res+=values[i];    }    res=(res/n_values);    return res;}
#include <stdio.h>float min_floats(float values[], int n_values){    int i;    float res;    res = 0;    for (i=0;i<=n_values;i++){        res+=values[i];    }    res=(res/n_values);    return res;}
#include <stdio.h>float min_floats(float values[], int n_values){    int i;    float res;    res = 0;    for (i=0;i<=n_values;i++){        res+=values[i];    }    res=(res/n_values);    return res;}
#include <stdio.h>float average(float values[], int n_values){    int i;    float res;    res = 0;    for (i=0;i<=n_values;i++){        res+=values[i];    }    res=average(values[i],n_values;    return res;}
#include <stdio.h>float average(float values[], int n_values){    int i;    float res;    res = 0;    for (i=0;i<=n_values;i++){        res+=values[i];    }    res=average(values[i],n_values);    return res;}
#include <stdio.h>float average(float values[], int n_values){    int i;    float average;    for(i = 0; i<n_values; i++)        average += values[i];    average = average/n_values;    return average;}
#include <stdio.h>float average(float values[], int n_values){    int i;    float res;    res = 0;    for (i=0;i<=n_values;i++){        res+=values[i];    }    res=(res/n_values);    return res;}
float average(float values[], int n_values) float sum=values[0]; for (i=1; i < n_values; i++) { sum= sum + values[i]; }float average=sum/n_values;return average }
float average(float values[], int n_values){ float sum=values[0]; for (i=1; i < n_values; i++) { sum= sum + values[i]; }float average=sum/n_values;return average }
float average(float values[], int n_values){ float sum=values[0];for (int i=1; i < n_values; i++) { sum= sum + values[i]; }float average=sum/n_values;return average }
float average(float values[], int n_values){ float sum=values[0];for (int i=1; i < n_values; i++) {sum= sum + values[i]; }float average=sum/n_values;return average }
float average(float values[], int n_values){ float sum=values[0];for (int i=1; i < n_values; i++) {sum= sum + values[i]; }float average=sum/n_values;return average; }
float average(float values[], int n_values){            float sum = 0;        for (int i = 0; i<n_values; i++){                        sum  = sum + values[i];        //ou         sum += values[i];                    }    float average = sum / (float) n_values;     return average;    }
float average(float values[], int n_values){            float sum = 0;        for (int i = 0; i<n_values; i++){                        //sum  = sum + values[i];        //ou         sum += values[i];                    }    float average = sum / (float) n_values;     return average;    }
float average(float values[], int n_values){            float sum = 0;        for (int i = 0; i<n_values; i++){                        //sum  = sum + values[i];        //ou         sum += values[i];                    }         return  sum / (n_values;    }
float average(float values[], int n_values){            float sum = 0;        for (int i = 0; i<n_values; i++){                        //sum  = sum + values[i];        //ou         sum += values[i];                    }         return  sum / n_values;    }
float average(float values[], int n_values){    float sum = 0    int cpt    for (cpt==0; cpt<n_values, cpt++){        sum += values[cpt];    }    return sum / n_values;}
float average(float values[], int n_values){    float sum = 0    int cpt    for (cpt==0; cpt<n_values; cpt++){        sum += values[cpt];    }    return sum / n_values;}
float average(float values[], int n_values){            float sum = 0;        for (int i = 0; i<n_values; i++){                        //sum  = sum + values[i];        //ou         sum += values[i];    }         return  sum / n_values;    }
float average(float values[], int n_values){    float sum = 0    int cpt    for (cpt==0; cpt<n_values; cpt++){        sum += values[cpt];    }    return sum / n_values;}
float average(float values[], int n_values){    float sum = 0    int cpt        for (cpt=0; cpt<n_values; cpt++){        sum += values[cpt];    }    return sum / n_values;}
float average(float values[], int n_values){    float sum = 0    int cpt        for (cpt=0; cpt<n_values; cpt++){        sum += values[cpt];    }    return sum / n_values;}
float average(float values[], int n_values){    float sum = 0;    int cpt;        for (cpt=0; cpt<n_values; cpt++){        sum += values[cpt];    }    return sum / n_values;}
float average(float values[], int n_values){    float sum = 0;    int cpt;        for (cpt=0; cpt<n_values; cpt++){        sum += values[cpt];    }    return sum / n_values;}
float average(float values[], int n_values) {    float sum = 0;for (int i = 0;i < n_values; i++){    sum += values[i];}return sum/n_values}
float average(float values[], int n_values) {    float sum = 0;for (int i = 0;i < n_values; i++){    sum += values[i];}return sum/n_values;}
float average(float values[], int n_values){    int sum = 0;    int count    for(int i = 0; i< n_values; i++){        sum = sum + values[i];        count++    }    return sum/count;            }
float average(float values[], int n_values){    int sum = 0;    int count    for(int i = 0; i< n_values; i++){        sum = sum + values[i];        count++    }    int av = sum/count;    return av ;            }
float average(float values[], int n_values){    int sum = 0;    int count    for(int i = 0; i< n_values; i++){        sum = sum + values[i];        count++    }    int av = sum/count;    return av ;            }
float average(float values[], int n_values){    int sum = 0;    int count    for(int i = 0; i< n_values; i++){        sum = sum + values[i];        count++;    }    int av = sum/count;    return av ;            }
float average(float values[], int n_values){    int sum = 0;    int count;    for(int i = 0; i< n_values; i++){        sum = sum + values[i];        count++;    }    int av = sum/count;    return av ;            }
#include <stdio.h>float average(float values[], int n_values){    }
float average(float values[], int n_values){    int sum = 0;    for(int i = 0; i< n_values; i++){        sum = sum + values[i];    }    int av = sum/n_values;    return av ;}
#include <stdio.h>float average(float values[], int n_values){    int i;    float avg;        for (i=0; i<n_values; i++)    {        avg += values[i];    }        avg /= n_values;        return avg;}
#include <stdio.h>float average(float values[], int n_values){    int i;    float avg;        for (i=0; i<n_values; i++)    {        avg += values[i];    }        avg /= n_values;        return avg;}
float average(float values[], int n_values){    int sum = 0;    for(int i = 0; i< n_values; i++){        sum = sum + values[i];    }    int av = sum/n_values;    return av ;}
float average(float values[], int n_values){    int sum = 0;    for(int i = 0; i< n_values; i++){        sum = sum + values[i];    }    int av = sum/n_values;    return av ;}
float average(float values[], int n_values){    int sum = 0;    for(int i = 0; i< n_values; i++){        sum = sum + values[i];    }    return sum/n_values;}
float average(float values[], int n_values){    int sum = 0;    for(int i = 0; i< n_values; i++){        sum = sum + values[i];    }    float av = sum/n_values    return sum/n_values;}
float average(float values[], int n_values){    int sum = 0;    for(int i = 0; i< n_values; i++){        sum = sum + values[i];    }    float av = sum/n_values;    return av;}
float average(float values[], int n_values) {    float sum;    for(i=0, i< n_values, i++) {        sum += i     }    return (sum / n_values);}
float average(float values[], int n_values) {    float sum;    int i;    for(i=0, i< n_values, i++) {        sum += i     }    return (sum / n_values);}
float average(float values[], int n_values) {    float sum;    int i;    for(i=0, i< n_values, i++) {        sum += i;     }    return (sum / n_values);}
float average(float values[], int n_values) {    float sum, average;    int i;    for(i=0, i< n_values, i++) {        sum += i;     }    average = sum/ n_values    return average;}
float average(float values[], int n_values) {    float sum, average;    int i;    for(i=0, i< n_values, i++) {        sum += i;     }    average = sum/ n_values;    return average;}
float average(float values[], int n_values) {    float sum, average;    int i;    for(i=0, i< n_values, i++) {        sum += values[i];     }    average = sum/ n_values;            return average;}
float average(float values[], int n_values) {    float sum, average;    int i;    for(i=0, i< n_values, i++) {        sum += values[i];     }    average = sum/ (float) n_values;            return average;}
float average(float values[], int n_values) {    float sum, average;    int i;    for(i=0, i< n_values, i++) {        sum += values[i];     }    average = sum/ (float) n_values;    return average;}
float average(float values[], int n_values) {    float sum, average;    int i;    for(i=0, i< n_values, i++) {        sum += values[i];     }    average = (sum/ (float) n_values);    return average;}
void average(int float values[], int n_values){    int i;    int res;    float average;    for(i=0; i<=n_values; i++){        res = res+tab[i];    }    average = (int)res/(int)n_values;     printf("%d\n",average);}
void average(float values[], int n_values){    int i;    float res;    float average;    for(i=0; i<=n_values; i++){        res = res+tab[i];    }    average = (int)res/(int)n_values;     printf("%f\n",average);}
void average(float values[], int n_values){    int i;    float res;    float average;    for(i=0; i<=n_values; i++){        res = res+tab[i];    }    average = (int)res/(int)n_values;     return average;}
void average(float values[], int n_values){    int i;    float res;    float average;    for(i=0; i<=n_values; i++){        res = res+tab[i];    }    average = (float)res/(int)n_values;    return average;}
void average(float values[], int n_values){    int i;    float res;    float average;    for(i=0; i<=n_values; i++){        res = res+tab[i];    }    average = res/n_values;    return average;}
void average(float values[], int n_values){    int i;    float res;    float average;    for(i=0; i<=n_values; i++){        res = res+values[i];    }    average = res/n_values;    return average;}
float average(float values[], int n_values) {    float sum, average;    int i;    for(i=0; i< n_values; i++) {        sum += values[i];     }    average = (sum/ (float) n_values);    return average;}
void average(float values[], int n_values){    int i;    float res=0;    float average=0;    for(i=0; i<=n_values; i++){        res = res+values[i];    }    average = res/n_values;    return average;}
void average(float values[], int n_values){    int i;    float res=0;    float average=0;    for(i=0; i<=n_values; i++){        res = res+values[i];    }    average = res/n_values;    return average;}
void average(float values[], int n_values){    int i;    float res=0;    float average=0;    for(i=0; i<=n_values; i++){        res = res+values[i];    }    average = res/n_values;    return average;}
void average(float values[], int n_values){    int i;    float res=0;    float average;    for(i=0; i<=n_values; i++){        res += values[i];    }    average = res/n_values;    return average;}
void average(float values[], int n_values){    int i;    float res=0;    float average;    for(i=0; i<=n_values; i++){        res += values[i];    }    average = res/n_values;    return average;}
float average(float values[], int n_values) {    float sum = 0, average;    int i;    for(i=0; i< n_values; i++) {        sum += values[i];     }    average = (sum/ (float) n_values);    return average;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res / n_values;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res / n_values;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res / n_values;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res / n_values;}
float average(float values[], int n_values) {    float res = 0;    for (int i = 0; i < n_values; i++){        res += values[i];    }    return res;}
float average(float* values, int n_values) {    float ave = 0;    int i;    for (i=0; i<n_values; ++i)        ave += *(values+i);    return ave/n_values;}
float average(float* values, int n_values){    float sum = 0;    int i;    for(i=0;i<n_values;i++){        sum += *(values+i);    }    return sum/n_values;}
float average(float* values, int n_values) {         int i;    float sum;    sum = *values;    for (i = 1; i < n_values; i++)        sum += *(values + i);    return sum / n_values;}
float average(float* values, int n_values) {         int i;    float sum = 0.0;    for (i = 0; i < n_values; i++)        sum += *(values + i);    return sum / n_values;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    float sum;    for(int i = 0; i<n_values; i++)    {        sum = *(values+i);    }    return sum/n_values;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    float sum;    for(int i = 0; i<n_values; i++)    {        sum += *(values+i);    }    return sum/n_values;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    float sum=0;    for(int i = 0; i<n_values; i++)    {        sum += *(values+i);    }    return sum/n_values;}
float average(float* values, int n_values){    float average=0;    for(int i=0; i < n_values; i++){        average += *(values + i);    }    average = average/n_values;    return average;}
float min_floats(float* values, int n_values) {    int cpt;    float average;    // Search Minimum Value    average = 0;    for (cpt= 0; cpt<n_values; cpt++)        average += *(values+cpt);    average /= n_values;    return min;}
float average(float* values, int n_values) {    int cpt;    float average_v;    // Search Minimum Value    average_v = 0;    for (cpt= 0; cpt<n_values; cpt++)        average_v += *(values+cpt);    average_v /= n_values;    return min;}
float average(float* values, int n_values) {        int i;    float avg=0;        for (i=0 ; i<n_values ; i++)        avg += *(values + i);        return (avg/n_values)}
float average(float* values, int n_values) {        int i;    float avg=0;        for (i=0 ; i<n_values ; i++)        avg += *(values + i);        return (avg/n_values);}
float average(float* values, int n_values) {    int cpt;    float average_v;    // Search Minimum Value    average_v = 0;    for (cpt= 0; cpt<n_values; cpt++)        average_v += *(values+cpt);    average_v /= n_values;    return average_v;}
float average(float* values, int n_values){    int i,minpos=0;    float result=0;    for (i=0;i<n_values;i++){        result = result + *(values+i);    }    return result/n_values;}
float average(float *values, int n_values) {  int sum = 0;  for (int i = 1; i < n_values; i++) {    sum += *(values + i);  }  return sum / n_values;}
#include <stdio.h>#include <stdlib.h>int float_average (){    int somme, n_val = 10;    float average;    int tab[10]={1,2,3,4,5,6,7,8,9,10};    int i;    somme = 0;    for (i=0 ; i<n_val ; i++)        {            somme += tab[i];        }        average = (float)somme / (float)n_val;        printf("%f\n", average);        return 0;}
float average(float *values, int n_values) {  int sum = 0;  for (int i = 0; i < n_values; i++) {    sum += *(values + i);  }  return sum / n_values;}
float average(float *values, int n_values) {  int sum = 0;  for (int i = 0; i < n_values; i++) {    sum += *(values + i);  }  return sum / n_values;}
float average(float *values, int n_values) {  float sum = 0;  for (int i = 0; i < n_values; i++) {    sum += *(values + i);  }  return sum / n_values;}
float average(float* values, int n_values){    int i;    float sum = 0;    for(i=0;i<n_values;i++)        sum += *(values + i);    return (sum/n_values);}
float average(float* values, int n_values) {    int cpt;    float average_v;    // Search Average Value    average_v = 0;    for (cpt= 0; cpt<n_values; cpt++)        average_v += *(values+cpt);    average_v /= n_values;    return average_v;}
float average(float* values, int n_values)     int i;    float *res;    sum = 0;        for (i=0; i<n_values; i++){        *sum = *sum + *(values + i);            }    return *sum/n_values;}
float average(float* values, int n_values)     int i;    float *res;    *sum = 0;        for (i=0; i<n_values; i++){        *sum = *sum + *(values + i);            }    return *sum/n_values;}
float average(float* values, int n_values)     int i;    float *sum;    *sum = 0;        for (i=0; i<n_values; i++){        *sum = *sum + *(values + i);            }    return *sum/n_values;}
float average(float* values, int n_values)     int i;    float *sum;    *sum = 0;        for (i=0; i<n_values; i++){        *sum = *sum + *(values + i);            }    return *sum/n_values;}
float average(float* values, int n_values)     int i;    float *sum;    *sum = 0;        for (i=0; i<n_values; i++){        *sum = *sum + *(values + i);            }    return *sum/n_values;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    int i;    double sum=0;        for ( i = 0; i < n_values; i++)        sum += *(values+i);    return sum/n_values; }
float average(float* values, int n_values){    float addition, average;    int i;    for (i=1; i<n_values; i++){        addition = addition + *(values+i);    }    average = addition / n_values;    return average}
float average(float* values, int n_values){    float addition, average;    int i;    for (i=1; i<n_values; i++){        addition = addition + *(values+i);    }    average = addition / n_values;    return average;}
float average(float* values, int n_values){    float addition, average;    int i;    for (i=1; i<=n_values; i++){        addition = addition + *(values+i);    }    average = addition / n_values;    return average;}
float average(float* values, int n_values){    float addition, average;    int i;    for (i=1; i<n_values; i++){        addition = addition + *(values+i);    }    average = addition / n_values;    return average;}
float average(float* values, int n_values){    float addition, average;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    average = addition / n_values;    return average;}
float average(float* values, int n_values){    float addition, average;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    average = addition / n_values;    return average;}
float average(float* values, int n_values){    float addition, average;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    average = addition / n_values;    return average;}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += *(values+i);        avg/n_values;    }    return avg;}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return addition / n_values;}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return addition / n_values;}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return addition / n_values;}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return addition / n_values;}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += *(values+i);        avg/= n_values;    }    return avg;}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return addition;}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return addition / n_values;}
float average(float* values, int n_values){    int i,sum=0;    for(i=0;i<n_values;i++){        sum+=*(values+i);    }    return (sum/n_values);}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return addition / n_values/2;}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values+1;i++){        avg += *(values+i);        avg/= n_values;    }    return avg;}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return addition / n_values/2;}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return addition / n_values;}
#include <stdio.h>float average(float* values, int n_values){    int i;    float sum=0;    for (i=0;i<n_values;i++){        sum+=*(values+i);    }    return sum/n_values;}
float average(float* values, int n_values){    int i;    float sum=0;    for(i=0;i<n_values;i++){        sum+=*(values+i);    }        return (sum/n_values);}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += *(values+i);        avg/= n_values;    }    return avg;}
float average(float* values, int n_values)     int i, sum;        sum = 0;        for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return sum/n_values;}
float average(float* values, int n_values)     int i, sum;        sum = 0;        for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return sum/n_values;}
float average(float* values, int n_values)     int i, sum;        sum = 0;        for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return sum/n_values;}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += *(values+i);        avg/= (float)n_values;    }    return avg;}
float average(float* values, int n_values)     int i, sum;        sum = 0;        for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return sum/n_values;}
float average(float* values, int n_values)     int i, sum =0;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return sum/n_values;}
float average(float* values, int n_values)     int i, sum =0;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return sum/n_values;}
float average(float* values, int n_values)     int i, sum =0;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return sum/n_values;}
float average(float* values, int n_values)     int i, sum =0;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return sum/n_values;}
float average(float* values, int n_values)     int i, sum =0;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values)     int i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values)     float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float av = 0;    for (int i = 0; i<n_values;i++){        av += *(values + i);    }    return av/n_values;}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += *(values+i);        printf("%f, %d",avg, i);        avg/= (float)n_values;    }    return avg;}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += *(values+i);        printf("%f, %d\n",avg, i);        avg/= (float)n_values;    }    return avg;}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + *i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + *i);            }        return (sum/n_values);}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += *(values+i*sizeof(float));        printf("%f, %d\n",avg, i);        avg/= (float)n_values;    }    return avg;}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += *(values+i);        printf("%f\n",*(values+i)        printf("%f, %d\n",avg, i);        avg/= (float)n_values;    }    return avg;}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += *(values+i);        printf("%f\n",*(values+i));        printf("%f, %d\n",avg, i);        avg/= (float)n_values;    }    return avg;}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values + i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum =0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, *sum =0 ;            for (i=0; i<n_values; i++){        *sum = *sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, *sum =0 ;            for (i=0; i<n_values; i++){        *sum = *sum + *(values+i);            }        return (*sum/n_values);}
float average(float* values, int n_values){    float i, *sum =0 ;            for (i=0; i<n_values; i++){        *sum = *sum + *(values+i);            }        return (*sum/n_values);}
float average(float* values, int n_values){    float i, *sum =0 ;            for (i=0; i<n_values; i++){        *sum = *sum + *(values+i);            }        return (*sum/n_values);}
float average(float* values, int n_values){    float i, *sum =0 ;            for (i=0; i<n_values; i++){        *sum = *sum + *(values+i);            }        return (*sum/n_values);}
float SommeTab( int N, float Tab [ ] ) {int i ;floatres =0;for ( i =0; i<N; i++) {res += Tab [ i ] ;}return res ;}float MoyenneTab ( int N, float Tab [ ] ) {return SommeTab(N, Tab )/N;}
float SommeTab( int N, float Tab [ ] ) {int i;floatres =0;for ( i =0; i<N; i++) {res += Tab [ i ] ;}return res;}float MoyenneTab ( int N, float Tab [ ] ) {return SommeTab(N, Tab )/N;}
float average(float* values, int n_values){    float i, *sum = 0 ;            for (i=0; i<n_values; i++){        *sum = *sum + *(values+i);            }        return (*sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (*sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (*sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += (float)*(values+i);        printf("%f\n",*(values+i));        printf("%f, %d\n",avg, i);        avg/= (float)n_values;    }    return avg;}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg += (float)*(values+i);        printf("%f\n",*(values+i));        printf("%f, %d\n",avg, i);        avg/= (float)n_values;    }    return avg;}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average = values[i]            }    return average}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average = values[i];            }    return average}
float average(float* values, int n_values){    int sum = 0;        for(int i = 0; i < n_values; i++){        sum += *(values + i);    }        return (sum /= n_values);}
float average(float*values, int n_values){    int i;    float sum =0;    for(i=0; i<n_values; i++){        sum += *(values+i);    }    return (sum/n_values);}
float average(float* values, int n_values){    int sum = 0;        for(int i = 0; i <= n_values; i++){        sum += *(values + i);    }        return (sum /= n_values);}
float average(float* values, int n_values){    float i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float* values, int n_values) {    int i;    float sum = 0;    for(i=0;i>n_values; i++)    {        sum+=*(values+1);    }    return(sum/n_values);}
float average(float* values, int n_values){    int sum = 0;        for(int i = 0; i <= n_values; i++){        sum += *(values + i);    }        return (sum /= n_values);}
float average(float* values, int n_values){    int sum = 0;        for(int i = 0; i < n_values; i++){        sum += *(values + i);    }        return (sum /= n_values);}
float average(float* values, int n_values) {    int i;    float sum = 0;    for(i=0;i<n_values; i++)    {        sum+=*(values+1);    }    return(sum/n_values);}
float average(float* values, int n_values) {    int i;    float sum = 0;    for(i=0;i<n_values; i++)    {        sum+=*(values+1);    }    return(sum/n_values);}
float average(float* values, int n_values) {    int i;    float sum = 0;    for(i=0;i<n_values; i++)    {        sum+=*(values+1);    }    return(sum/n_values);}
float average(float* values, int n_values) {    int i;    float sum = 0;    for(i=0;i<n_values; i++)    {        sum+=*(values+i);    }    return(sum/n_values);}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average += *(values+i)    }    return sum/n_values}
float average(float* values, int n_values){    float sum = 0;        for(int i = 0; i < n_values; i++){        sum += *(values + i);    }        return (sum /= n_values);}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average += *(values+i);    }    return sum/n_values}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average += *(values+i);    }    return sum/n_values}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average += *(values+i);    }    return sum/n_values;}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average += *(values+i);    }    return sum/n_values;}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average += *(values+i);    }    return sum/n_values;}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average += *(values+i);    }    return average/n_values;}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average += *(values+i);    }    return average/n_values;}
float average(float* values, int n_values){    int i, sum = 0 ;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }        return (sum/n_values);}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1, i<n_values, i++){        average += *(values+i);    }    return (average/n_values);}
float average(float *values, int n_values){        int average, i;    average = 0;    for (i=1; i<n_values; i++){        average += *(values+i);    }    return (average/n_values);}
float average (float *values, int n_values){    float sum = 0;    int i;    for (i=0; i<n_values; i++){        sum+= *(values+i);    }    return(sum/n_values);}
#include <stdio.h> float min_floats(float* values, int n_values){        int i;    float sum=0;    for i=0;i<n_values;i++){        sum+=*(values+i);    }    return (sum/n_values);}
float average(float *values, int n_values){        float average, i;    average = 0;    for (i=1; i<n_values; i++){        average += *(values+i);    }    return (average/n_values);}
#include <stdio.h> float min_floats(float* values, int n_values){        int i;    float sum=0;    for (i=0;i<n_values;i++){        sum+=*(values+i);    }    return (sum/n_values);}
float average(float* values, int n_values){    int i, sum = 0 ;    float res;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }    res = sum/n_values        return res;}
float min_floats(float *values, int n_values){        int moy, i;      for (i=0; i<n_values; i++)        moy += *values            return moy/n_values;    }
float average(float* values, int n_values){    int i, sum = 0 ;    float res;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }    res = sum/n_values        return res ;}
float min_floats(float *values, int n_values){        int moy, i;      for (i=0; i<n_values; i++)        moy += *values            return (moy/n_values);    }
float min_floats(float *values, int n_values){        int moy, i;      for (i=0; i<n_values; i++)        moy += *values            return (moy/n_values);    }
float average(float* values, int n_values){    int i, sum = 0 ;    float res;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }    res = sum/n_values;        return res ;}
float min_floats(float *values, int n_values){        int moy, i;      for (i=0; i=<n_values; i++)        moy += *values            return (moy/n_values);    }
float min_floats(float *values, int n_values){        int moy, i;      for (i=0; i=<n_values; i++)        moy += *values            return (moy/n_values);    }
float min_floats(float *values, int n_values){        int moy, i;      for (i=0; i=<n_values; i++)        moy += *values;            return (moy/n_values);    }
float min_floats(float *values, int n_values){        int moy, i;      for (i=0; i=<n_values; i++)        moy += *values;            return (moy/n_values);    }
float average(float *values, int n_values){        float average, i;    average = 0;    for (i=1; i<n_values; i++){        average += *(values+i);    }    return (average/n_values);}
float average(float* values, int n_values){    int i;    float sum=0;    for(i=0; i<n_values; i++){        sum+=*(values+i);    }    return (sum/n_values);}
#include <stdio.h> int main(){float min_floats(float* values, int n_values){        int i;    float sum=0;    for (i=0;i<n_values;i++){        sum+=*(values+i);    }    return (sum/n_values);}}
float average(float *values, int n_values){        int average, i;      for (i=0; i=<n_values; i++)        average += *values;            return (average/n_values);    }
float average(float *values, int n_values){        float average, i;    average = 0;    for (i=1; i<n_values; i++){        average += (values+i);    }    return (average/n_values);}
float average(float *values, int n_values){        int average, i;      for (i=0; i<n_values; i++)        average += *values;            return (average/n_values);    }
#include <stdio.h> int main(){float min_floats(float* values, int n_values){        int i;    float sum=0;    for (i=0;i<n_values;i++){        sum+=*(values+i);    }    return (sum/n_values);}
#include <stdio.h> int main(){float min_floats(float* values, int n_values){        int i;    float sum=0;    for (i=0;i<n_values;i++){        sum+=*(values+i);    }    return (sum/n_values);}}
float average(float *values, int n_values){        float average, i;    average = 0;    for (i=1; i<n_values; i++){        average += *(*values+i);    }    return (average/n_values);}
float average(float *values, int n_values){        int average, i;      for (i=0; i<n_values; i++)        average += *values;            return (average/n_values+1);    }
#include <stdio.h>int main(){float min_floats(float* values, int n_values){        int i;    float sum=0;    for (i=0;i<n_values;i++){        sum+=*(values+i);    }    return (sum/n_values);}}
float average(float *values, int n_values){        float average, i;    average = 0;    for (i=1; i<n_values; i++){        average += (*values+i);    }    return (average/n_values);}
float average(float *values, int n_values){        int average, i;      for (i=0; i<n_values; i++)        average += *values;            return (average/(n_values+1));    }
float average(float* values, int n_values){    int i  ;    float sum = 0;            for (i=0; i<n_values; i++){        sum = sum + *(values+i);            }            return sum/n_values ;}
float average(float* values, int n_values){    int i;    float s;        s=0.0;    for(i=0; i< n_values; i++)        s+= *(values+i);    return s    }
float average(float* values, int n_values){    int i;    float s;        s=0.0;    for(i=0; i< n_values; i++)        s+= *(values+i);    return s;    }
float average(float *values, int n_values){        int average, i;      for (i=0; i<n_values; i++)        average += *(values+i);            return (average/n_values);    }
float average(float* values, int n_values){    int i;    float s;        s=0.0;    for(i=0; i< n_values; i++)        s+= *(values+i);    return s/n_values;    }
#include <stdio.h>int main(){    float min_floats(float* values, int n_values){        int i;        float sum=0;        for (i=0;i<n_values;i++){            sum+=*(values+i);                    }        return (sum/n_values);}}
float average(float* values, int n_values) {    float avg;    avg = 0;    for(int i=0;i<n_values;i++){        avg +=(float)*(values+i);        printf("%f\n",*(values+i));        printf("%f, %d\n",avg, i);    }        avg/= (float)n_values;    return avg;}
float average(float *values, int n_values){        int average, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values    return (average);    }
float average(float *values, int n_values){        int average, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float *values, int n_values){        int average, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float *values, int n_values){        int average, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float *values, int n_values){        float average = 0;    int i;    for (i=1; i<n_values; i++){        average += (*values+i);    }    return (average/n_values);}
float average(float *values, int n_values){        float average = 0;    int i;    for (i=1; i<n_values; i++){        average += *(values+i);    }    return (average/n_values);}
float average(float *values, int n_values){        int average = 0, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float *values, int n_values){        float average = 0;    int i;    for (i=0 ; i<n_values; i++){        average += *(values+i);    }    return (average/n_values);}
float average(float *values, int n_values){        float average = 0, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float *values, int n_values){        float average = 0, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float *values, int n_values){        int average = 0, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float *values, int n_values){        int average = 0, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float *values, int n_values){        int average = 0, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float *values, int n_values){        int average = 0, i;      for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
#include <stdio.h>int main(){    float min_floats(float* values, int n_values){        int i;        float sum=0;        for (i=0;i<n_values;i++){            sum+=*(values+i);                    }        return (sum/n_values);}}
#include <stdio.h>int main(){    float min_floats(float* values, int n_values){        int i;        float sum=0;        for (i=0;i<n_values;i++){            sum+=*(values+i);                    }        return (sum/n_values);}}
float average(float *values, int n_values){        float average = 0;    int i;    for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float* values, int n_values){    int cpt, total;    float avr;    total = 0;    for (cpt = 0; cpt < n_values; cpt++){        total += *(values+i);    }    avr = total/n_values;    return avr;}
float average(float* values, int n_values){    int cpt, total;    float avr;    total = 0;    for (cpt = 0; cpt < n_values; cpt++){        total += *(values+cpt);    }    avr = total/n_values;    return avr;}
float average(float* values, int n_values){    int cpt;    float total, avr;    total = 0;    for (cpt = 0; cpt < n_values; cpt++){        total += *(values+cpt);    }    avr = total/n_values;    return avr;}
float average(float *values, int n_values){        float average = 0;    int i;    for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
float average(float* values, int n_values){    int i;    float sum=0;    for (i=0;i<n_values;i++){        sum+=*(values+i);    }    return (sum/n_values);}
float average(float* values, int n_values){    float *pos=values, moyenne =0;    int i;    for (i=0; i<n_values;i++){        moyenne=moyenne+*(pos+i)    }    return moyenne/n_values;}
float average(float* values, int n_values){    float *pos=values, moyenne =0;    int i;    for (i=0; i<n_values;i++){        moyenne=moyenne+*(pos+i);    }    return moyenne/n_values;}
 float average(float *values, int n_values){        int min, i, average;    average = 0;    min=*values;    for (i=1; i<n_values; i++)        average = average + *values;    return average;    }
 float average(float *values, int n_values){        int min, i, average;    average = 0;    min=*values;    for (i=1; i<n_values; i++)        average = average + *values;    average = average / i    return average;    }
#include <stdio.h>int main(){    float min_floats(float* values, int n_values){        int i;        float sum=0;        for (i=0;i<n_values;i++){            sum+=*(values+i);                    }        return (sum/n_values);}}
 float average(float *values, int n_values){        int min, i, average;    average = 0;    min=*values;    for (i=1; i<n_values; i++)        average = average + *values;    average = average / i;    return average;    }
#include <stdio.h>    float min_floats(float* values, int n_values){        int i;        float sum=0;        for (i=0;i<n_values;i++){            sum+=*(values+i);                    }        return (sum/n_values);}
    float min_floats(float* values, int n_values){        int i;        float sum=0;        for (i=0;i<n_values;i++){            sum+=*(values+i);                    }        return (sum/n_values);}
float average(float*values,int n_values){        float i,sum=0;        for (i=0;i<n_values;i++){        sum=sum+ *(values+i);    }    return (sum/n_values);}
 float average(float *values, int n_values){        int min, i, average;    average = 0;    min=*values;    for (i=1; i<n_values; i++)        average = average + *values;    average = average / i;    return average+1;    }
    float average(float* values, int n_values){        int i;        float sum=0;        for (i=0;i<n_values;i++){            sum+=*(values+i);                    }        return (sum/n_values);}
 float average(float *values, int n_values){        int min, i, average;    average = 0;    min=*values;    for (i=1; i<n_values; i++)        average = average + *values;    average = average / i;    return average;    }
float average(float*values,int n_values){        int i,sum=0;        for (i=0;i<n_values;i++){        sum=sum+ *(values+i);    }    return (sum/n_values);}
float average(float*values,int n_values){        int i,sum=0;        for (i=0;i<n_values;i++){        sum=sum+ *(values+i);    }    return (sum/n_values);}
float average(float*values,int n_values){        int i,sum=0;        for (i=0;i<n_values;i++){        sum=sum+ *(values+i);    }    return (sum/n_values);}
float average(float*values,int n_values){        int i,sum=0;        for (i=0;i<n_values;i++){        sum=sum+ *(values+i);    }    return (sum/n_values);}
float average(float*values,int n_values){        double i,sum=0;        for (i=0;i<n_values;i++){        sum=sum+ *(values+i);    }    return (sum/n_values);}
float average(float*values,int n_values){        int i,sum=0;        for (i=0;i<n_values;i++){        sum=sum+ *(values+i);    }    return (sum/n_values);}
float average(float* values, int n_values){    float *pos=values, moyenne =0;    int i;    for (i=0; i<n_values;i++){        moyenne=moyenne+*(pos+i)    }    return moyenne/n_values;}
float average(float* values, int n_values){    float *pos=values, moyenne =0;    int i;    for (i=0; i<n_values;i++){        moyenne=moyenne+*(pos+i);    }    return moyenne/n_values;}
float SommeTab( int N, float Tab [ ] ) {int i;floatres =0;for ( i =0; i<N; i++) {res += Tab [ i ] ;}return res;}float MoyenneTab ( int N, float Tab [ ] ) {return SommeTab(N, Tab )/N;}
 float average(float *values, int n_values){        int min, i, average;    average = 0;    min=*values;    for (i=1; i<n_values; i++)        average = average + *values;    average = average / i;    return average;    }
 float average(float *values, int n_values){        int min, i, average;    average = 0;    min=*values;    for (i=1; i<n_values; i++)        average = average + *values;    average = average / i;    return average;    }
 float average(float *values, int n_values){        int min, i;    float average;        average = 0;    min=*values;    for (i=1; i<n_values; i++)        average = average + *values;    average = average / i;    return average;    }
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values) {    float sum = 0, average=0;    for(int i=0; i<=n_values; i++) {        sum += *(values+i);    }    average = sum / n_values;    return average;}
 float average(float *values, int n_values){        int min, i;    float average;    average = 0;        for (i=0; i<n_values; i++)        average = average + *values;    average = average / i;    return average;    }
 float average(float *values, int n_values){        int min, i;    float average;    average = 0;        for (i=0; i<n_values; i++)        average = average + *values;    average = average / i;    return average;    }
float average(float *values, int n_values){        float average = 0;    int i;    for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
#include <stdio.h>float average(float *values, int n_values){    int i;    float sum = 0, average;    for (i = 0, i < n_values, i++)    {        sum = sum + *(values+i);    }    average = sum / n_values;    return average;}
float average(float *values, int n_values){    int i, sum;    float av;    sum = *values}
float average(float *values, int n_values){    int i, sum;    float av;    sum = *values;    for (i = 0; )}
void float average(float* values, int n_values){      int sum, lenght=10;      float average;      int tab[10]={1,2,3,4,5,6,7,8,9,10};      int  i;      sum=0;
float average(float *values, int n_values){    int i, sum;    float av;    sum = *values;    for (i = 0; i < n_values; i++)        sum = sum + *(values + i);    av = float(sum)/float(n_values);    return av}
float average(float *values, int n_values){    int i, sum;    float av;    sum = *values;    for (i = 0; i < n_values; i++)        sum = sum + *(values + i);    av = float(sum)/float(n_values);    return av;}
float average(float *values, int n_values){    int sum;    for (int i=0; i<n_values;i++){        sum += *(values+i);    }        return sum/n_values}
float average(float *values, int n_values){    int i, sum;    float av;    sum = *values;    for (i = 1; i < n_values; i++)        sum = sum + *(values + i);    av = float(sum)/float(n_values);    return av;}
float average(float *values, int n_values){    int sum;    for (int i=0; i<n_values;i++){        sum += *(values+i);    }        return sum/n_values;}
float average(float *values, int n_values){    int sum;    float average;    for (int i=0; i<n_values;i++){        sum += *(values+i);    }    average = sum/n_values;    return average;}
float average(float *values, int n_values){    int sum=0;    float average;    for (int i=0; i<n_values;i++){        sum += *(values+i);    }    average = sum/n_values;    return average;}
float average(float *values, int n_values){        float average,sum=0;    for (int i=0; i<n_values;i++){        sum += *(values+i);    }    average = sum/n_values;    return average;}
float average(float *values, int n_values){        float average = 0;    int i;    for (i=0; i<n_values; i++)        average += *(values+i);        average = average/n_values;    return (average);    }
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values) {    int i;    float sum = 0.0;    for (i = 0; i < n_values; i++)        sum += *(values + i);    return sum / n_values;}
 float average(float *values, int n_values){        int i;    float average;    average = 0;        for (i=0; i<n_values; i++)        average = average + *values+i;    average = average / n_values;    return average;    }
float average(float*values, int n_values){    }
 float average(float *values, int n_values){        int i;    float average;    average = 0;        for (i=0; i<n_values; i++)        average = average + *(values+i);    average = average / n_values;    return average;    }
float average(float *values, int n_values){    int i;    float av, sum;    sum = *values;    for (i = 1; i < n_values; i++)        sum = sum + *(values + i);    av = float(sum)/float(n_values);    return av;}
float average(float *values, int n_values){    int i;    float sum, av;    sum = *values;    for (i = 1; i < n_values; i++)        sum = sum + *(values + i);    av = float(sum)/float(n_values);    return av;}
float average(float*values, int n_values){    int i, ave;    ave = 0;    for (i = 0; I< n_values; i++)    {        ave = ave + *(values+i);        ave = ave/n_values    }    return ave}
float average(float*values, int n_values){    int i, ave;    ave = 0;    for (i = 0; I< n_values; i++)    {        ave = ave + *(values+i);        ave = ave/n_values;    }    return ave;}
float average(float*values, int n_values){    int i, ave;    ave = 0;    for (i = 0; i< n_values; i++)    {        ave = ave + *(values+i);        ave = ave/n_values;    }    return ave;}
float average(float*values, int n_values){    int i, ave;    ave = 0;    for (i = 0; i< n_values; i++)    {        ave = ave + *(values+i);    }    ave = ave / n_values    return ave;}
float average(float*values, int n_values){    int i, ave;    ave = 0;    for (i = 0; i< n_values; i++)    {        ave = ave + *(values+i);    }    ave = ave / n_values;    return ave;}
float average(float*values, int n_values){    int i;    float ave;    ave = 0;    for (i = 0; i< n_values; i++)    {        ave = ave + *(values+i);    }    ave = ave / n_values;    return ave;}
float average(float *values, int n_values){    int i;    float sum, av;    sum = *values;    for (i = 0; i < n_values; i++)        sum = sum + *(values + i);    av = float(sum)/float(n_values);    return av;}
float average(float *values, int n_values){    int i;    float sum, av;    sum = *values;    for (i = 1; i < n_values; i++)        sum = sum + *(values + i);    av = float(sum)/float(n_values);    return av;}
float average(float* values, int n_values) {        int i;    float sum;    sum=*values;    for (i=1; i<n_values; i++){        min = *(values+i);    }    return sum/n_values;    }
float average(float* values, int n_values) {        int i;    float sum;    sum=*values;    for (i=1; i<n_values; i++){        min = min  + *(values+i);    }    return sum/n_values;    }
float average(float* values, int n_values) {        int i;    float sum;    sum=*values;    for (i=1; i<n_values; i++){        min = min  + *(values);    }    return sum/n_values;    }
float average(float* values, int n_values) {        int sum,i;    sum=*values;    for (i=1; i<n_values; i++){        min = min  + *(values);    }    return sum/n_values;    }
float average(float* values, int n_values) {        int sum,i;    sum=*values;    for (i=1; i<n_values; i++)        min = min  + *(values);    return sum/n_values;    }
float average(float* values, int n_values){    int i;    float avg = 0.0;    for  (i = 0; i < n_values; i++){        avg += *(values + i)    }}
float average(float* values, int n_values){    int i;    float avg = 0.0;    for  (i = 0; i < n_values; i++){        avg += *(values + i);    }    return avg}
float average(float* values, int n_values){    int i;    float avg = 0.0;    for  (i = 0; i < n_values; i++){        avg += *(values + i);    }    return avg;}
float average(float* values, int n_values){    int i;    float avg = 0.0;    for  (i = 0; i < n_values; i++){        avg += *(values + i);    }    avg /= n_values    return avg;}
float average(float* values, int n_values){    int i;    float avg = 0.0;    for  (i = 0; i < n_values; i++){        avg += *(values + i);    }    avg /= n_values;    return avg;}
float average(float* values, int n_values) {    int i;    float sum = 0.0;    for (i = 0; i < n_values; i++)        sum += *(values + i);    return sum / n_values;}
float average(float* values, int n_values) {        int sum=0,i;    for (i=0; i<n_values; i++)        min += *(values+i);    sum = sum/n_values;    return sum;    }
float average(float* values, int n_values) {        int sum=0,i;    for (i=0; i<n_values; i++) min += *(values+i);    sum = sum/n_values;    return sum;    }
    float average(float* values, int n_values){        int i;        float sum=0;        for (i=0;i<n_values;i++){            sum+=*(values+i);                    }        return (sum/n_values);}
float average(float* values, int n_values) {    int average,i;    for(i=0;i<n_values;i++)        average+=*(values+ i);    return average/3;}
float average(float* values, int n_values) {    int average,i;    for(i=0;i<n_values;i++)        average+= *(values+ i);    return average/3;}
float average(float* values, int n_values) {        int i;    float sum=0;    for (i=0; i<n_values; i++) min += *(values+i);    sum = sum/n_values;    return sum;    }
float average(float* values, int n_values) {    int average,i;    for(i=0;i<n_values;i++)        average+=*(values+ i);    return average/n_values;}
float average(float* values, int n_values) {        int i;    float sum=0;    for (i=0; i<n_values; i++){        min += *(values+i);    }    sum = sum/n_values;    return sum;    }
float average(float* values, int n_values) {    int average,i;    for(i=0;i<n_values;i++)        average+= *(values+ i);    return average/n_values;}
float average(float* values, int n_values) {        int i;    float sum=0;    for (i=0; i<n_values; i++){        sum += *(values+i);    }    sum = sum/n_values;    return sum;    }
float average(float* values, int n_values) {        int i;    float sum=0;    for (i=0; i<n_values; i++){        sum += *(values+i);    }    sum = sum/n_values;    return sum;    }
float average(float* values, int n_values) {    int i;    float average;    for(i=0;i<n_values;i++)        average+= *(values+ i);    return average/n_values;}
void float average(float* values, int n_values){      int sum, lenght=10;      float average;      int tab[10]={1,2,3,4,5,6,7,8,9,10};      int  i;      sum=0;       for (i=0 ; i< lenght ; i++)      {          sum += tab[i];      }      average = (float)sum / (float)lenght;      printf("%f\n",average);      return 0;}
void float average(float* values, int n_values){      int sum, lenght=10;      float average;      int tab[10]={1,2,3,4,5,6,7,8,9,10};      int  i;      sum=0;       for (i=0 ; i< lenght ; i++)      {          sum += tab[i];      }      average = (float)sum / (float)lenght;      printf("%f\n",average);      return 0;}
float average(float* values, int n_values){      int sum, lenght=10;      float average;      int tab[10]={1,2,3,4,5,6,7,8,9,10};      int  i;      sum=0;       for (i=0 ; i< lenght ; i++)      {          sum += tab[i];      }      average = (float)sum / (float)lenght;      printf("%f\n",average);      return 0;}
#include <stdio.h>float average(float *values, int n_values){    int i;    float sum = 0, result;    for (i = 0, i < n_values, i++)    {        sum = sum + *(values+i);    }    result = sum / n_values;    return result;}
#include <stdio.h>float average(float *values, int n_values){    int i;    float sum = 0, result;    for (i = 0; i < n_values; i++)    {        sum = sum + *(values+i);    }    result = sum / n_values;    return result;}
float average(float*values, int n_values){    float sum;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }}
float average(float*values, int n_values){    float sum;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }}
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum /n_values;}
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum /n_values;}
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum /n_values;}
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum /n_values;}
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = *values;    for (i=1;i<=n_values;i++){        sum += *(values+i);    }        }
float average(float*values, int n_values){    float sum,res;    int i;    sum = 0;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = 0;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    }
float average(float*values, int n_values){    float sum,res;    int i;    sum = 0;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum/n_values}
float average(float*values, int n_values){    float sum,res;    int i;    sum = 0;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum/n_values;}
float average(float*values, int n_values){    float sum,res;    int i;    sum = 0;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum/n_values;}
float min_floats(float* values, int n_values) {    int i;    float min;    min = *values;    for (i = 1; i < n_values; i++)        if (*(values + i) < min)            min = *(values + i);    return min;}
float average(float* values, int n_values) {    int i;    float sum = 0.0;    for (i = 0; i < n_values; i++)        sum += *(values + i);    return sum / n_values;}
float average(float*values, int n_values){    float sum,res;    int i;    sum = 0;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum/n_values;}
float average(float*values, int n_values){    float sum,res;    int i;    sum = 0;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum/n_values;}
float average(float*values, int n_values){    float sum,res;    int i;    sum = 0;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum/n_values;}
float average(float* values, int n_values){    float average, counter;    int i;        counter = 0;        for (i = 0, i < n_values, i++)    {        counter += *(values+i);    }        average = counter/n_values;        return average}
float average(float* values, int n_values){    float average, counter;    int i;        counter = 0;        for (i = 0, i < n_values, i++);    {        counter += *(values+i);    }        average = counter/n_values;        return average;}
float average(float* values, int n_values){    float average, counter;    int i;        counter = 0;        for (i = 0, i < n_values, i++);    {        counter += *(values+i);    }        average = counter/n_values;        return average;}
float average(float* values, int n_values){    float average, counter;    int i;        counter = 0;        for (i = 0; i < n_values; i++)    {        counter += *(values+i);    }        average = counter/n_values;        return average;}
float average(float* values, int n_values){    float average;    average = *(values+0);    for(int i = 1; i < n_values; i++)    {        average = average + *(values+i)    }    average = (average/n_values);    return average;}
float average(float* values, int n_values){    float average;    average = *(values+0);    for(int i = 1; i < n_values; i++)    {        average = average + *(values+i);    }    average = (average/n_values);    return average;}
float average(float* values, int n_values) {    int i;    float sum, avg;    sum= *values    for(i=1; i<n_values; i++)        sum = sum + *(values+i);    avg= float(sum)/float(n_values);    return avg;}
null
float average(float* values, int n_values) {    int i;    float sum, avg;    sum= *values;    for(i=1; i<n_values; i++)        sum = sum + *(values+i);    avg= float(sum)/float(n_values);    return avg;}
float average(float* values, int n_values) {    int i;    float sum, av;    sum = *values;    for (i=1;i<n_values; i++)       sum = sum + *(values+i);    av = float(sum)/float(n_values);    return av}
float average(float* values, int n_values) {    int i;    float sum, av;    sum = *values;    for (i=1;i<n_values; i++)       sum = sum + *(values+i);    av = float(sum)/float(n_values);    return av;
float average(float* values, int n_values) {    int i;    float sum, av;    sum = *values;    for (i = 1; i<n_values; i++)    sum = sum + *(values+ i);    av = float(sum)/float(n_values);    return av;}
float average(float* values, int n_values) {    int i;    float sum, av;    sum = *values;    for (i=1;i<n_values; i++);       sum = sum + *(values+i);    av = float(sum)/float(n_values);    return av;
float average(float* values, int n_values) {    int i;    float sum, av;    sum = *values;    for (i=1;i<n_values; i++);       sum = sum + *(values+i)    av = float(sum)/float(n_values);    return av;
float average(float* values, int n_values) {    int i;    float sum, av;    sum = *values;    for (i=1;i<n_values; i++)       sum = sum + *(values+i);    av = float(sum)/float(n_values);    return av;}
float average(float* values, int n_values){    float addition;    int i;    for (i=0; i<n_values; i++){        addition = addition + *(values+i);    }    return float(addition) / float(n_values);}
float average(float* values, int n_values){    float addition;    int i;    for (i=1; i<n_values; i++){        addition = addition + *(values+i);    }    return float(addition) / float(n_values);}
float average(float* values, int n_values){    float sum,average;    int i;    for (i=1; i<n_values; i++){        sum = sum + *(values+i);    }    average = float(sum)/float(n_values);    return average;}
float average(float* values, int n_values){    float sum,average;    int i;    for (i=1; i<n_values; i++){        sum += *(values+i);    }    average = float(sum)/float(n_values);    return average;}
float average(float* values, int n_values){    float sum,average;    int i;    for (i=0; i<n_values; i++){        sum += *(values+i);    }    average = float(sum)/float(n_values);    return average;}
float average(float*values, int n_values){    float sum,res;    int i;    sum = 0;    for (i=0;i<=n_values;i++){        sum += *(values+i);    }    res = sum/n_values;}
#include <stdio.h>#include <stdlib.h>float average(float *values, int n_values) {  float sum = 0;  for (int i = 0; i < n_values; i++) {    sum += *(values + i);  }  return sum / n_values;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    float result=0;    for (i=0; i<n_values;i++){        result+= *(values+i);    }    return 0;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    float result=0;    int i ;    for (i=0; i<n_values;i++){        result+= *(values+i);    }    return 0;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    float result=0;    int i ;    for (i=0; i<n_values;i++){        result+= *(values+i);    }    result = result/n_values;    return 0;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    float result=0;    int i ;    for (i=0; i<n_values;i++){        result+= *(values+i);    }    result = result/n_values;    return 0;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    float result=0;    int i ;    for (i=0; i<n_values;i++){        result+= *(values+i);    }    return result/n_values;}
float average(float* values, int n_values){      float sum;      int  i;      float average;      sum=0;       for (i=0 ; i< n_values ; i++)      {          sum += *(values+i);      }      average = sum / n_values;      return average;}
#include<stdio.h>float average(float *values, int n_values){    int i;    float av;    for(i=0; i<n_values; i++)    {        av += *(values + i);    }    av /= n_values;    return av;}
#include<stdio.h>float average(float *values, int n_values){    int i;    float av;    for(i=0; i<n_values; i++)    {        av += *(values + i);    }    av = av/n_values;    return av;}
#include<stdio.h>float average(float *values, int n_values){    int i;    float av;    for(i=0; i<n_values; i++)    {        av += *(values + i);    }    return av;}
#include<stdio.h>float average(float *values, int n_values){    int i;    float av;    for(i=0; i<n_values; i++)    {        av += *(values + i);    }    av /= n_values;    return av;}
#include<stdio.h>float average(float *values, int n_values){    int i;    float av;    for(i=0; i<= n_values; i++)    {        av += *(values + i);    }    av /= n_values;    return av;}
#include<stdio.h>float average(float *values, int n_values){    int i;    float av;    for(i=0; i <= n_values; i++)    {        av += *(values + i);    }    av /= (n_values +1);    return av;}
#include<stdio.h>float average(float *values, int n_values){    int i;    float av;    for(i=0; i < n_values; i++)    {        av += *(values + i);    }    av /= (n_values + 1);    return av;}
#include<stdio.h>float average(float *values, int n_values){    int i;    float av;    for(i=0; i < n_values; i++)    {        av += *(values + i);    }    av /= (n_values);    return av;}
#include<stdio.h>float average(float *values, int n_values){    int i;    float av=0;    for(i=0; i < n_values; i++)    {        av += *(values + i);    }    av /= (n_values);    return av;}
float average(float* values, int n_values){    int i;    float somme = 0    for (i = 0; i < n_values; i++){        somme += values + i * sizeof(float);    }    return somme / n_values}
float average(float* values, int n_values){    int i;    float somme = 0;    for (i = 0; i < n_values; i++){        somme += values + i * sizeof(float);    }    return somme / n_values}
float average(float* values, int n_values){    int i;    float somme = 0;    for (i = 0; i < n_values; i++){        somme += values + i * sizeof(float);    }    return somme / n_values;}
float average(float* values, int n_values) {    int i=0;    float moyenne = 0;    for (i=0;i<n_values;i++)    {        moyenne = moyenne + *(values+i);    }    return moyenne/n_values;}
float average(float *values, int n_values){    int i;    float somme = 0;    for (i = 0; i < n_values; i++){        somme = somme + *(values + i);    }    return somme / n_values;}
float average(float* values, int n_values){    int moy,i;    for (i=0; i<t_logique; i++)            moy=moy+*(values+i);    return 0;}
#include <stdio.h>float average(float* values, int n_values){    int i,sum;    for(i=0;i<n_values;i++){        sum = sum + *(values+i);    }    return (sum/n_values);}
#include <stdio.h>float average(float* values, int n_values){    int i;    float sum;    for(i=0;i<n_values;i++){        sum = sum + *(values+i);    }    return (sum/n_values);}
float average(float* values, int n_values);float average(float* values, int n_values){    float moy = 0;    int i;    for(i=0; i < n_values; i++){        moy += *(values+i);    }    return moy/n_values;}
float average(float* values, int n_values){    int i, sum=0;    for(i=0;i<n_values;i++)      sum+=*(T+i);    return (sum/n_values);}
float average(float* values, int n_values){    int i, sum=0;    for(i=0;i<n_values;i++)      sum+=*(values+i);    return (sum/n_values);}
null
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    int i;    float moyenne;    for (i=0; i<n_values; i++){        moyenne=moyenne + *(values+i);    }    return (moyenne/n_values);}
float average(float* values, int n_values){    int i, sum=0;    for(i=0;i<n_values;i++)      sum+=*(values+i);    return (sum/n_values.0);}
float average(float* values, int n_values){    float moyen=0.0;    for(int i = 0; i<n_values;i++){        moyen = moyen+(values+i);    }    moyen = (moyen)/n_values;        return moyen;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    int i;    float moyenne=0;    for (i=0; i<n_values; i++){        moyenne=moyenne + *(values+i);    }    return (moyenne/n_values);}
float average(float* values, int n_values){    int i;    float sum=0;    for(i=0;i<n_values;i++)      sum+=*(values+i);    return (sum/n_values);}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values){    int i;    float moyenne=0;    for (i=0; i<n_values; i++){        moyenne=moyenne + *(values+i);    }    return (moyenne/n_values);}
float average(float* values, int n_values){    float moyen=0.0;    for(int i = 0; i<n_values;i++){        moyen = moyen + (values+i);    }    moyen = (moyen)/n_values;        return moyen;}
float average(float* values, int n_values){    float moyen=0.0;    for(int i = 0; i<n_values;i++){        moyen = + (values+i);    }    moyen = (moyen)/n_values;        return moyen;}
float average(float* values, int n_values){    float moyen=0.0;        for(int i = 0; i<n_values;i++){        moyen = moyen + *(values+i);    }    moyen = (moyen)/n_values;        return moyen;}
float average(float* values, int n_values) {    int i;	float moy;		for(i=0;i<n_values;i++)	{		moy= moy + T[i];	}	return moy/n_values;}
float average(float* values, int n_values) {    int i;	float moy;		for(i=0;i<n_values;i++)	{		moy= moy + *(values+i);	}	return moy/n_values;}
float average(float* values, int n_values){    int i=0;    float moyenne=0;    for (i=0;i<n_values;i++){        moyenne = moyenne+ *(tab+i)    }    return moyenne;}
float average(float* values, int n_values){    int i=0;    float moyenne=0;    for (i=0;i<n_values;i++){        moyenne = moyenne + *(tab+i);    }    return moyenne;}
float average(float* values, int n_values){    int i=0;    float moyenne=0;    for (i=0;i<n_values;i++){        moyenne = moyenne + *(tab+i);    }    return moyenne;}
float average(float* values, int n_values){    int i=0;    float moyenne=0;    for (i=0;i<n_values;i++){        moyenne = moyenne + *(values+i);    }    return moyenne;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values) {    int i, somme;    float moyenne;    for (i=0;i<n_values; i++) {        somme += *(values+i);    }    moyenne = somme/n_values;    return moyenne;}
float average(float* values, int n_values){    int moy,i;    for (i=0; i<n_values; i++)            moy=moy+*(values+i);    return (moy/n_values);}
float average(float* values, int n_values){    int i=0;    float somme=0,moyenne=0;    for (i=0;i<n_values;i++){        somme += *(values+i);    }    return somme/9.0;}
float average(float*values,int n_values){    float S=0.0;    for (i=0;i<n_values;i++)    {        S+=*(values+i);    }    return S;}
float average(float* values, int n_values){    int i;    float moy=0;    for (i=0; i<n_values; i++)            moy=moy+*(values+i);    return (moy/n_values);}
float average(float*values,int n_values){    float S=0.0;    int i;    for (i=0;i<n_values;i++)    {        S+=*(values+i);    }    return S;}
float average(float* values, int n_values){    int i=0;    float somme=0,moyenne=0;    for (i=0;i<n_values;i++){        somme += *(values+i);    }    return somme/n_values;}
float average(float*values,int n_values){    float S=0.0;    int i;    for (i=0;i<n_values;i++)    {        S+=*(values+i);    }    return S/n_values;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values) {    int i, somme=0;    float moyenne;    for (i=0;i<n_values; i++) {        somme += *(values+i);    }    moyenne = somme/n_values;    return moyenne;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values) {    int i, somme=0;    float moyenne;    for (i=0;i<n_values; i++) {        somme += *(values+i);    }    moyenne = somme/n_values;    return moyenne;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values) {    int i, somme=0;    float moyenne;    for (i=0;i<n_values; i++) {        somme += *(values+i);    }    moyenne = somme/n_values;    return moyenne;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values) {    int i, somme=0;    float moyenne;    for (i=0;i<n_values; i++) {        somme += *(values+i);    }    moyenne = somme/n_values;    return moyenne;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values) {    int i, somme=0;    float moyenne;    for (i=0;i<n_values; i++) {        somme += *(values+i);    }    moyenne = somme/n_values;    return moyenne;}
#include <stdio.h>#include <stdlib.h>float average(float* values, int n_values) {    int i;    float moyenne, somme=0;    for (i=0;i<n_values; i++) {        somme += *(values+i);    }    moyenne = somme/n_values;    return moyenne;}
float average(float* values, int n_values){    int moyenne=0;    for(int i=0;i<n_values;i++)        moyenne+= *(tab+i);    moyenne/= n_values;    return moyenne;}
float average(float* values, int n_values){    int moyenne=0;    for(int i=0;i<n_values;i++)        moyenne+= *(values+i);    moyenne/= n_values;    return moyenne;}
float average(float* values, int n_values) {    int i ;    float moy = 0 ;    for (i = 0 ; i < n_values ; i++)    {        moy += *(values+i) ;    }    return moy/n_values ;}
float average(float* values, int n_values){    float moyenne=0;    for(int i=0;i<n_values;i++)        moyenne+= *(values+i);    moyenne/= n_values;    return moyenne;}
float average(float* values, int n_values) {    int i ;    float moy = 0 ;    for (i = 0 ; i < n_values ; i++)    {        moy += *(values+i) ;    }    return moy ;}
float average(float* values, int n_values) {    int i ;    float moy = 0 ;    for (i = 0 ; i < n_values ; i++)    {        moy += *(values+i) ;    }    return moy/n_values ;}
float average(float* values, int n_values){    int i;    float som=0;    for(i=0;i<n_values;i++)    {        som= som + *(values+i);    }    return som/n_values;}
float average(float *values, int n_values){	int i, cpt = 0;	float moy;	for (i=0;i<n_values;i++){		cpt = cpt + *(values+i);			}	moy = cpt/n_values;	return moy}
float average(float *values, int n_values){	int i, cpt = 0;	float moy;	for (i=0;i<n_values;i++){		cpt = cpt + *(values+i);			}	moy = cpt/n_values;	return moy;}
float average(float* tab, int s){    float moy;    float res;    for (int i=0;i<s;i++){        res=tab(i)+res;        moy=res/s;    }    return moy;}
float average(float* values, int n_values) {    int moyenne = 0;    for(i = 0; i<n_values; i++){        moyenne = moyenne + *(values + i);    }    return moyenne/n_values;}
float average(float* tab, int s){    float *moy;    float *res;    for (int i=0;i<s;i++){        res=tab(i)+res;        moy=res/s;    }    return moy;}
float average(float* values, int n_values) {    int moyenne = 0, i;    for(i = 0; i<n_values; i++){        moyenne = moyenne + *(values + i);    }    return moyenne/n_values;}
float average(float* tab, int s){    float *moy;    float *res;    for (int i=0;i<s;i++){        res=tab(i)+res;        moy=res/s;    }    return moy;}
float average(float *values, int n_values){	int i, cpt = 0;	float moy;	for (i=0;i<n_values;i++){		cpt = cpt + *(values+i);			}	moy = cpt/n_values;	return moy;}
float average(float* tab, int s){    float moy;    float *res;    for (int i=0;i<s;i++){        res=tab(i)+res;        moy=res/s;    }    return moy;}
float average(float tab[],float taille){    int moy=0, i;    for(i=0; i<=taille-1; i++){        moy=moy+tab[i];    }    printf("moy= %f",(moy/taille));}
float average(float tab,float taille){    int moy=0, i;    for(i=0; i<=taille-1; i++){        moy=moy+tab[i];    }    printf("moy= %f",(moy/taille));}
#include <stdio.h>float average(float*values, int n_values){    int i;    float *values, somme;    for(i=0; i<n_values; i++)    {        somme=somme+(*values);    }    return somme/n_values;}
float average(float* tab,float taille){    int moy=0, i;    for(i=0; i<=taille-1; i++){        moy=moy+tab[i];    }    printf("moy= %f",(moy/taille));}
float average(float* values, int n_values) {    float moyenne = 0, i;    for(i = 0; i<n_values; i++){        moyenne = moyenne + *(values + i);    }    return moyenne/n_values;}
#include <stdio.h>float average(float*values, int n_values){    int i;    float *(values), somme;    for(i=0; i<n_values; i++)    {        somme=somme+(*values);    }    return somme/n_values;}
float average(float* values, int n_values) {    float moyenne = 0, i;    for(i = 0; i<n_values; i++){        moyenne = moyenne + (*(values + i));    }    return moyenne/n_values;}
#include <stdio.h>float average(float*values, int n_values){    int i;    float *values, somme;    somme=0;    for(i=0; i<n_values; i++)    {        somme=somme+(*values);    }    return somme/n_values;}
float average(float* values, int n_values) {    float moyenne = 0, i;    for(i = 0; i<n_values; i++){        moyenne = moyenne + *(values + i);    }    return moyenne/n_values;}
float average(float* tab, int taille){    float moy=0, i;    for(i=0; i<=taille-1; i++){        moy=moy+*(tab+i);    }    return moy}
float average(float* tab, int taille){    float moy=0, i;    for(i=0; i<=taille-1; i++){        moy=moy+*(tab+i);    }    return moy;}
float average(float* tab, int taille){    float moy=0, i;    for(i=0; i<=taille-1; i++){        moy=moy+ *(tab+i);    }    return moy;}
float average(float* tab, int s){    float moy;    float res=*tab;    for (int i=0;i<s;i++){        res=tab(i)+res;        moy=res/s;    }    return moy;}
#include <stdio.h>float average(float*values, int n_values){    int i;    float *values, somme;    somme=0;    for(i=0; i<n_values; i++)    {        somme=somme+(*(values+i));    }    return somme/n_values;}
float average(float* tab, int taille){    float moy=0;     int i;    for(i=0; i<=taille-1; i++){        moy=moy+ *(tab+i);    }    return moy;}
#include <stdio.h>float average(float*values, int n_values){    int i;    float somme;    somme=0;    for(i=0; i<n_values; i++)    {        somme=somme+(*(values+i));    }    return somme/n_values;}
float average(float* tab, int taille){    float moy=0;     for(int i=0; i<taille; i++){        moy=moy+ *(tab+i);    }    return moy;}
float average(float* values, int n_values){    float moyen=0.0;    for(int i = 0; i<n_values;i++){        moyen = moyen + *(values+i);    }    moyen = (moyen)/n_values;    return moyen;}
float average(float* values, int n_values) {    float moyenne = 0;    int i;    for(i = 0; i<n_values; i++){        moyenne = moyenne + *(values + i);    }    return moyenne/n_values;}
float average(float* tab, int taille){    float moy=0;     for(int i=0; i<taille; i++){        moy = moy+ *(tab+i);    }    return moy;}float min_floats(float* tab, int s){    float min= *tab;    for (int i=0; i<s; i++){        if(min > *(tab+i)){            min = *(tab+i);        }    }    return (min/taille);}
float average(float* tab, int taille){    float moy=0;     for(int i=0; i<taille; i++){        moy = moy+ *(tab+i);    }    return (moy/taille);}
float average(float*values,int n_values){    int i,moyenne;    int p = i + 1;    for(i=0; i < n_values; i++){        moyenne = moyenne + p;    }    moyenne = moyenne/ *values;    return moyenne;}
float average(float*values,int n_values){    int somme=0;    int i;    for(i=0<n_values;i++){        somme=somme+*(values+i);    }    return somme;}
float average(float* t, int n){    int i;    float sum = 0., moyenne;        for(i=0; i<n; i++)    {        sum += *(t+i);    }        moyenne = sum/n        printf("La moyenne est: %f", moyenne);}
float average(float *values, int n_values){	int i, cpt = 0;	float moy;	for (i=0;i<n_values;i++){		cpt = cpt + *(values+i);			}	moy = cpt/n_values;	return moy;}
float average(float*values,int n_values){    float somme=0;    int i;    for(i=0<n_values;i++){        somme=somme+*(values+i);    }    return somme;}
float average(float*values,int n_values){    float somme=0;    int i;    for(i=0<n_values;i++){        somme=somme+*(values+i);    }    return somme;}
loat average(float*values,int n_values){    int i,moyenne;    int p = i + 1;    for(i=0; i < n_values; i++){        moyenne = moyenne + *values;    }    moyenne = moyenne/ *values;    return moyenne;}
float average(float* values, int n_values) {      int tab[10]={1,2,3,4,5,6,7,8,9,10};      int somme;        int longueur=10;      float moyenne;      int  i;      somme=0;      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];      }      moyenne = (float)somme / (float)longueur;      printf("%f\n",moyenne);      return 0;    }
float average(float*values,int n_values){    int i,moyenne;    int p = i + 1;    for(i=0; i < n_values; i++){        moyenne = moyenne + *values;    }    moyenne = moyenne/ *values;    return moyenne;}
float average(float*values,int n_values){        float moy = *values;    for (int i=0; i < n_values ; i++){        moy = moy + *(values + i);    }    return moy / n_values;}
float average(float* t, int n){    int i;    float sum = 0., moyenne;        for(i=0; i<n; i++)    {        sum += *(t+i);    }        return sum/n;}
float average(float*values,int n_values){    float somme=0;    int i;    for(i=0;<n_values;i++){        somme=somme+*(values+i);    }    return somme;}
float average(float*values,int n_values){    float somme=0;    int i;    for(i=0;i<n_values;i++){        somme=somme+*(values+i);    }    return somme;}
float average(float* values, int n_values);float average(float* values, int n_values){    float moy=*tab;    for(i=0,i<n_values; i++){        moy=moy+*(tab+i);    }    moy=moy/i;    return moy;}
float average(float* values, int n_values);float average(float* values, int n_values){    float moy=*values;    for(i=0,i<n_values; i++){        moy=moy+*(values+i);    }    moy=moy/i;    return moy;}
float average(float*values,int n_values){    float somme=0;    int i;    for(i=0;i<n_values;i++){        printf("%f",*(values+i)):        somme=somme+*(values+i);    }    return somme;}
float average(float* values, int n_values);float average(float* values, int n_values){    int i;    float moy=*values;    for(i=0,i<n_values; i++){        moy=moy+*(values+i);    }    moy=moy/i;    return moy;}
float average(float*values,int n_values){        float moy = 0;    for (int i=0; i < n_values ; i++){        moy = moy + *(values + i);    }    return moy / n_values;}
float average(float*values,int n_values){    float somme=0;    int i;    for(i=0;i<n_values;i++){        somme=somme+*(values+i);    }    return somme;}
float average(float* values, int n_values);float average(float* values, int n_values){    int i;    float moy=*values;    for(i=0,i<n_values; i++);{        moy=moy+*(values+i);    }    moy=moy/i;    return moy;}
float average(float* values, int n_values);float average(float* values, int n_values){    int i;    float moy=*values;    for(i=0;i<n_values; i++){        moy=moy+*(values+i);    }    moy=moy/i;    return moy;}
float average(float* values, int n_values) {      int tab[10]={1,2,3,4,5,6,7,8,9,10};      int somme;        int longueur=10;      float moyenne;      int  i;      somme=0;      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];      }      moyenne = (somme / longueur);      printf("%f\n",moyenne);      return 0;    }
float average(float* values, int n_values);float average(float* values, int n_values){    int i;    float moy=*values;    for(i=1;i<n_values; i++){        moy=moy+*(values+i);    }    moy=moy/i;    return moy;}
float average(float*values,int n_values){    float somme=0;    int i;    for(i=0;i<n_values;i++){        somme=somme+*(values+i);    }    somme=somme/n_values;    return somme;}
float average(float* values, int n_values){    int i;    float moyenne = 0. ;    for (i=0;i<n_values;i++){        moyenne += *(values+i);    }    printf("la moyenne est : %f", moyenne/n_values);}
float average(float* values, int n_values){    int i;    float moyenne = 0. ;    for (i=0;i<n_values;i++){        moyenne += *(values+i);    }    return moyenne/n_values;}
#include <stdio.h>float average(float*values,int n_values){int moy , i ,som;som = 0 ;for (i=0;i<n_values;i++)    som = som + *(values+i);    moy = som / n_values ; return moy ;}
#include <stdio.h>float average(float*values,int n_values){float moy ,som;int i ;som = 0 ;for (i=0;i<n_values;i++)    som = som + *(values+i);    moy = som / n_values ; return moy ;}
float average(float* values, int n_values){    float moy = 0;    for(int i=0; i < n_values; i++){        moy += *(values+i);    }    moy /= n_values;    return moy}
float average(float* values, int n_values){    float moy = 0;    for(int i=0; i < n_values; i++){        moy += *(values+i);    }    moy /= n_values;    return moy;}
float average(float* tab, int n);float average(float* tab, int n){    float moy=0;    for(int i = 0; i < n; i++){        moy += *(tab + i);    }    return moy/n;}
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];      }      moyenne = (somme / longueur);      printf("%f\n",moyenne);      return 0;    }
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];      }      moyenne = (somme / longueur);      printf("%f\n",moyenne);    }
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                  return somme       }            moyenne = (somme / longueur);      printf("%f\n",moyenne);    }
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                  return somme       }            moyenne = (somme / longueur);      printf("%f\n",moyenne);    }
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }            moyenne = (somme / longueur);          return moyenne}
float average(float* values, int n_values) 
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }          moyenne = (somme / longueur);        return moyenne}
float average(float* values, int n_values) 
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }    return somme       moyenne = (somme / longueur);        return moyenne}
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }    return somme       moyenne = (somme / longueur);}    return moyenne    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }    return somme       moyenne = (somme / longueur);}    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }    return somme       moyenne = (somme / longueur);}    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }    return somme       moyenne = (somme / longueur);}    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }    return somme       moyenne = (somme / longueur);}    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }    return somme       moyenne = (somme / longueur);}    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }    return somme       moyenne = (somme / longueur);}    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }      moyenne = (somme / longueur);    return 0    }    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }      moyenne = (somme / longueur);    return 0    }    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }      moyenne = (somme / longueur);    return 0    }    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }      moyenne = (somme / longueur);    return 0    }    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }      moyenne = (somme / longueur);    return moyenne     }    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }      moyenne = (somme / longueur);    return moyenne     }    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }      moyenne = (somme / longueur);    return moyenne     }    
float average(float* values, int n_values) {      for (i=0 ; i< longueur ; i++)      {          somme += tab[i];                }      moyenne = (somme / longueur);    return moyenne     }    
float average(float* values, int n_values){    int i, cpt = 0;    float moy;    for (i=0;i<n_values;i++){        cpt = cpt + *(values+i);    }    moy = cpt/n_values;    return moy;}void test_average(){    int i,t ;    float *p ;    printf("Combien de valeurs souhaitez-vous saisir ? : ") ;    scanf("%d",&t) ;    p = (float*)malloc(t*sizeof(int)) ;    for(i=0;i<t;i++)    {        printf("Entrez une val : \n") ;        scanf("%f",p+i) ;    }    for(i=0;i<t;i++)    {        printf("T[%d]=%2.f\n",i,*(p+i));    }    printf("%f",average(p,t)) ;    free(p) ;}
float average(float *values, int n_values){	int i, cpt = 0;	float moy;	for (i=0;i<n_values;i++){		cpt = cpt + *(values+i);			}	moy = cpt/n_values;	return moy;}
float average(float *values, int n_values){	int i, cpt = 0;	float moy;	for (i=0;i<n_values;i++){		cpt = cpt + *(values+i);			}	moy = cpt/n_values;	return moy;}
float average(float*values,int n_values){    float S=0.0;    int i;    for (i=0;i<n_values;i++)    {        S+=*(values+i);    }    return S/n_values;}
float average(float* values, int n_values);float test_average(float* values, int n_values);
float average(float* values, int n_values){    int i, cpt = 0;    float moy;    for (i=0;i<n_values;i++){        cpt = cpt + *(values+i);    }    moy = cpt/n_values;    return moy;}
float average(float* values, int n_values);float test_average(float* values, int n_values);float average(float* values, int n_values); int i ; 
float average(float* values, int n_values){    int i, cpt = 0 ;    float moy ;    for (i=0 ; i  n_values ; i++)    {        cpt = cpt + *(values+i) ;    }    moy = cpt / n_values ;    return moy ;}
float average(float* values, int n_values){    int i, cpt = 0 ;    float moy ;    for (i=0 ; i  n_values ; i++){        cpt = cpt + *(values+i) ;    }    moy = cpt / n_values ;    return moy ;}
float average(float*tab, int longueur) {      for (int i=0 ; i< longueur ; i++)      {          somme += *(tab)+i;                }      moyenne = (somme) / longueur;    return moyenne;    }    
float average(float* values, int n_values){    int i, cpt = 0 ;    float moy ;    for (i=0 ; i < n_values ; i++)    {        cpt = cpt + *(values+i) ;    }    moy = cpt / n_values ;    return moy ;}
float average (float*values, int n_values){    int i, cpt=0;    float moy;    for (i=0;i<n_values;i++);    cpt=cpt+*(values+i);}moy=cpt/float(n_values);return moy;}
float average (float*values, int n_values){    int i, cpt=0;    float moy;    for (i=0;i<n_values;i++);    cpt=cpt+*(values+i);}moy=cpt/n_values;return moy;}
float average(float* values, int n_values);float average(float* values, int n_values){    int i;    float moy;    moy = 0;    for (int i=0 ; i<n_values; i++){        moy = moy + *(values+i);    }    moy = moy/n_values    return moy;}
float average(float* values, int n_values);float average(float* values, int n_values){    int i;    float moy;    moy = 0;    for (int i=0 ; i<n_values; i++){        moy = moy + *(values+i);    }    moy = moy/n_values    return moy;}
float average(float*tab, int longueur) {      for (int i=0 ; i< longueur ; i++)      {          somme += *(tab+i);                }      moyenne = (somme) / longueur;    return moyenne;    }    
float average(float*tab, int longueur) {      for (int i=0 ; i< longueur ; i++)      {          somme += *(tab+i);                }      moyenne = (somme) / longueur;    return moyenne;    }    
float average(float* values, int n_values);float average(float* values, int n_values){    int i;    float moy;    moy = 0;    for (int i=0 ; i<n_values; i++){        moy = moy + *(values+i);    }    moy = moy/n_values;    return moy;}
float average(float* values, int n_values){    int i ;    float moy, cpt = 0 ;    for (i = 0 ; i < n_values ; i++)    {        cpt = cpt + *(values + i) ;    }    moy = cpt / n_values ;    return moy ;}
float average(float*tab, int longueur) int somme=0;{      for (int i=0 ; i< longueur ; i++)      {          somme += *(tab+i);                }      moyenne = (somme) / longueur;    return moyenne;    }    
float average(float*tab, int longueur){ int somme=0;      for (int i=0 ; i< longueur ; i++)      {          somme += *(tab+i);                }      moyenne = (somme) / longueur;    return moyenne;    }    
float average (float*values, float n_values){    int i, cpt=0;    float moy;    for (i=0;i<n_values;i++);    cpt=cpt+*(values+i);}moy=cpt/n_values;return moy;}
float average(float* tab, int longueur){ float somme=0;      for (int i=0 ; i< longueur ; i++)      {          somme += *(tab+i);                }      moyenne = (somme) / longueur;    return moyenne;    }    
float average (float*values, int n_values){    int i;    float moy,cpt=0;    for (i=0;i<n_values;i++);    cpt=cpt+*(values+i);}moy=cpt/n_values;return moy;}
float average(float* tab, int longueur){ float somme=0.0;float moyenne=0.0;      for (int i=0 ; i< longueur ; i++)      {          somme += *(tab+i);                }      moyenne = (somme) / longueur;    return moyenne;    }    
float average (float*values, int n_values){    int i;    float moy,cpt=0;    for (i=0;i<n_values;i++){    cpt=cpt+*(values+i);}moy=cpt/n_values;return moy;}
float average(float *values, int n_values){	int i;	float moy,  cpt = 0;	for (i=0;i<n_values;i++){		cpt = cpt + *(values+i);	}	moy = cpt/n_values;	return moy;}
float average(float* values, int n_values);float average(float* values, int n_values){    int i;    float moy;    moy = 0;    for (int i=0 ; i<n_values; i++){        moy = moy + *(values+i);    }    moy = moy/n_values;    return moy;}
float average(float* values, int n_values);float test_average(float* values, int n_values);float average(float* values, int n_values); int i ; float average=*values; 
float average(float* values, int n_values);float test_average(float* values, int n_values);float average(float* values, int n_values); int i ; float average=*values;  for(i=0;i<n_values;i++){
float average(float* values, int n_values);float test_average(float* values, int n_values);float average(float* values, int n_values); int i ; float average=*values;  for(i=0;i<n_values;i++){      average=*(values+i);
float average(float* values, int n_values);float test_average(float* values, int n_values);float average(float* values, int n_values); int i ; float average=*values;  for(i=0;i<n_values;i++){      average=*(values+i);    }    return min;
float average(float* tab, int longueur){ float somme=0.0;float moyenne=0.0;      for (int i=0 ; i< longueur ; i++)      {          somme += *(tab+i);                }      moyenne = (somme) / longueur;    return moyenne;    }
float average(float*values, int n_values){    int i, cpt = 0;    float moy;    for (i = 0; i < n_values; i++){        cpt = cpt + *(values + i)    }    moy = cpt / n_values;    return moy}
float average(float* values, int n_values);float test_average(float* values, int n_values);float average(float* values, int n_values); int i ; float average=*values;  for(i=0;i<n_values;i++){      average=*(values+i);    }    return average;
float average(float* values, int n_values);float test_average(float* values, int n_values);float average(float* values, int n_values); int i ; float average=*values;  for(i=0;i<n_values;i++){      average=*(values+i);    }    return average;    }
float average(float* values, int n_values);float test_average(float* values, int n_values);float average(float* values, int n_values); int i ; float average=*values;  for(i=0;i<n_values;i++){      average=*(values+i);    }    return average;}
float average(float* values, int n_values);float test_average(float* values, int n_values);float average(float* values, int n_values); int i ; float average=*values;  for(i=0;i<n_values;i++){      average=*(values+i);    }    return average;}
float average(float* values, int n_values){    int i;    float s;    s = 0;    for (i=0; i<n_values; i++){        s = *(values+i)+s;}    return s/n_values;}
float average(float* values, int n_values){    int i,s=0;    for (i=0;i<n_values,i++)    {        s+=*(values+i)    }    return s/(n_values)}
float average(float* values, int n_values){    int i,s=0;    for (i=0;i<n_values,i++)    {        s+=*(values+i);    }    return s/(n_values);}
float average(float* values, int n_values){    int i,s=0;    for (i=0;i<n_values,i++)    {        s+=*(values+i);    }    return s/(n_values);}
float average(float* values, int n_values){    int i;    float s=0;    for (i=0;i<n_values,i++)    {        s+=*(values+i);    }    return s/(n_values);}
float average(float* values, int n_values){    int i;    float s=0;    for (i=0;i<n_values,i++)    {        s+=*(values+i);    }    return s/(n_values);}
float average(float* values, int n_values){    int i;    float s=0;    for (i=0;i<n_values,i++)    {        s+=*(values+i);    }    return s/(n_values);}
float average(float* values, int n_values){    int i;    float s=0;    for (i=0;i<n_values,i++)    {        s+=*(values+i);    }    return s/(n_values);}
float average(float* values, int n_values){    int i;    float s=0;    for (i=0;i<n_values,i++)    {        s+=*(values+i);    }    return s/(n_values);}
float average(float* values, int n_values){    int i;    float s=0;        for (i=0;i<n_values,i++)            s+=*(values+i);        return s/(n_values);}
float average(float* values, int n_values){    int i;    float s=0;        for (i=0;i<n_values,i++) {        s+=*(values+i);    }                    return s/(n_values);}
float average(float* values, int n_values){    int i;    float s=0;        for (i=0;i<n_values,i++) {        s+=*(values+i);    }                    return s/(n_values);}
float average(float* values, int n_values){    int i;    float s=0;        for (i=0;i<n_values,i++) {        s=s+*(values+i);    }                    return s/(n_values);}
float average(float* values, int n_values) float average(float* values, int n_values){    int a,b,c;    printf("inserez 3 valeurs : \n");    scanf("%d",&a);    scanf("%d",&b);    scanf("%d",&c);    printf("moyenne : %f ", (a+b+c)/3.0);    return 0;}
float average(float* values, int n_values){    int i;    float s=0;        for (i=0;i<n_values;i++) {        s=s+*(values+i);    }                    return s/(n_values);}
float average(float* values, int n_values); int i ; float average=*values;  for(i=0;i<n_values;i++){      average=*(values+i);    }    return average;}
float average(float* values, int n_values) float average(float* values, int n_values){    float tab[7] = {9, 1, 5, 2, 3, 11, 6};    int s = 0, i;    float moy = 0;       for(i = 0; i < 7; i++) {        s = s + tab[i];    }       moy = (float)s / i;    printf("La moyenne des valeurs du tableau est %.2f", moy);          return 0;}
float average(float* values, int n_values){    float moy = 0;    if (values != NULL)    {        for (int i = 0; i < n_values; i++)        {            moy += *(values+i);        }        moy = moy/n_values;    }    return moy;}
float average(float* values, int n_values) float average(float* values, int n_values){    float* values;    float tab[7] = {9, 1, 5, 2, 3, 11, 6};    int s = 0, i;    float moy = 0;       for(i = 0; i < n_values; i++) {        s = s + tab[i];    }       moy = (float)s / i;    printf("La moyenne des valeurs du tableau est %.2f", moy);          return 0;}
float average(float* values, int n_values) float average(float* values, int n_values){    float* values;    float tab[7] = {9, 1, 5, 2, 3, 11, 6};    int s = 0, i;    float moy = 0;       for(i = 0; i < n_values; i++) {        s = s + tab[i];    }       moy = (float)s / i;    printf("La moyenne des valeurs du tableau est %f", moy);          return 0;}
float average(float* values, int n_values) float average(float* values, int n_values){    float* values;    float tab[7] = {9, 1, 5, 2, 3, 11, 6};    int s = 0, i;    float moy = 0;       for(i = 0; i < n_values; i++) {        s = s + tab[i];    }       moy = (float)s / i;    printf("La moyenne des valeurs du tableau est %f", moy);          return 0;}
float average(float* values, int n_values); int i ; float average=*values;  for(i=0;i<n_values;i++){      average=*(values+i);    }    return average;}
float average(float*values, int n_values){    int i, cpt = 0;    float moy;    for (i = 0; i < n_values; i++){        cpt = cpt + *(values + i)    }    moy = cpt / n_values;    return moy}
float average(float*values, int n_values){    int i, cpt = 0;    float moy;    for (i = 0; i < n_values; i++){        cpt = cpt + *(values + i);    }    moy = cpt / n_values;    return moy}
float average(float* values, int n_values) {    int i = 0;    float moy    for (i;i<n_values;i++);        {            moy=*(values+1);        }        return moy/++i;    }
float average(float*values, int n_values){    int i, cpt = 0;    float moy;    for (i = 0; i < n_values; i++){        cpt = cpt + *(values + i);    }    moy = cpt / n_values;    return moy;}
float average(float* values, int n_values) {    int i = 0;    float moy    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+1);        }    return moy/i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    return moy/i;    }
float average(float* values, int n_values) float average(float* values, int n_values){    float* tab;    int s = 0, i;    float moy = 0;       for(i = 0; i < n; i++) {        s = s + tab[i];    }       moy = (float)s / i;    printf("La moyenne des valeurs du tableau est %f", moy);          return 0;}
float average(float* values, int n_values) float average(float* values, int n_values){    float* tab;    int s = 0, i;    float moy = 0;       for(i = 0; i < n; i++) {        s = s + tab[i];    }       moy = (float)s / i;    printf("La moyenne des valeurs du tableau est %f", moy);          return 0;}
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    return moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/++i;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/++i;    return moy,    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/++i;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/++i;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/++i;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/++i;    return moy;    }
float average(float* values, int n_values) {    int tab }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy=0;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy=0;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy=0;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy=0;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy=0;    for (i;i<n_values;i++);        {            moy=moy+*(values+i);        }    moy=moy/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy, som=0;    for (i;i<n_values;i++);        {            som=som+*(values+i);        }    moy=som/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy, som=0;    for (i;i<n_values;i++);        {            som=som+*(values+i);        }    moy=som/n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy, som=0;    for (i;i<n_values;i++);        {            som=som + *(values+i);        }    moy= som / n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy, som=0;    for (i;i<n_values;i++);            som=som + *(values+i);    moy= som / n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy, som=0;    for (i;i<n_values;i++);            som=som + *(values+i);    moy= som / n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy, som=0;    for (i;i<n_values;i++);            som=som + *(values+i);    moy= som / n_values;    return moy;    }
float average(float* values, int n_values) {    int i = 0;    float moy, som=0;    for (i;i<n_values;i++);            som=som + *(values+i);    moy= som / n_values;    return moy;    }
float average(float*values,int n_values){float moy ,som;int i ;som = 0 ;for (i=0;i<n_values;i++)    som = som + *(values+i);moy = som / n_values ; return moy ;}
float average(float*values,int n_values){float moy ,som;int i ;som = 0 ;for (i=0;i<n_values;i++)    som = som + *(values+i);moy = som / n_values ; return moy ;}
float average(float*values,int n_values){float moy ,som;int i ;som = 0 ;for (i=0;i<n_values;i++)    som = som + *(values+i);moy = som / n_values ; return moy ;}
float average(float*values,int n_values){float moy ,som;int i=0 ;som = 0 ;for (i;i<n_values;i++){    som = som + *(values+i);}moy = som / n_values ; return moy ;}
float average(float*values,int n_values){float moy ,som;int i=0 ;som = 0 ;for (i;i<n_values;i++){    som = som + *(values+i);}moy = som / n_values ; return moy ;}
float average(float* values, int n_values) {    float moy,tot;    for (i=0;i=>n_values;i++){        tot = tot+tab[i];    }    moy = tot/n_values    return moy}
int float average(float*values,int n_values)floa
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 1; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    return average;}
float average(float* values, int n_values) {    float moy,tot;    for (i=0;i=>n_values;i++){        tot = tot+tab[i];    }    moy = tot/n_values    return moy}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    return average;}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    return average;}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    return average;}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 1; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    return average;}
float average(float* values, int n_values) 
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 1; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    average = average / n_values;    return average;}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    average = average / n_values;    return average;}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    average = average / n_values;    return average;}
#include <stdio.h>float average(float* values, int n_values) {    float min=-1;    if(values!=NULL && n_values>0){        //min=values[0];        somme = *values;        for(int i=1;i<n_values;i++){            somme = somme + n_values        }    }    min = somme / n_values    return min;}void test_min_floats(){    // float tab[10];    int N;    printf("saisir le nombre d'elements : ");    scanf("%d",&N);    // on va creer un tableau de taille N de float    float * tab = (float *)malloc(N*sizeof(float));    if(tab==NULL){        printf("Pas de mémoire disponbile !! erreur");    }else{        printf("saisir les %d valeurs : \n", N);        for(int i=0;i<N;i++){            //scanf("%f", ptr[i]);            scanf("%f", tab+i);        }        printf("La moyenne est : %f", min_floats(tab , N));    }}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    average = average / n_values;    return average;}
float average(float* values, int n_values) {    float moy,tot;    for (i=0;i=>n_values;i++){        tot = tot+(values +i);    }    moy = tot/n_values    return moy}
#include <stdio.h>float average(float* values, int n_values) {    float min=-1;    if(values!=NULL && n_values>0){        //min=values[0];        somme = *values;        for(int i=1;i<n_values;i++){            somme = somme + n_values;        }    }    min = somme / n_values;    return min;}void test_min_floats(){    // float tab[10];    int N;    printf("saisir le nombre d'elements : ");    scanf("%d",&N);    // on va creer un tableau de taille N de float    float * tab = (float *)malloc(N*sizeof(float));    if(tab==NULL){        printf("Pas de mémoire disponbile !! erreur");    }else{        printf("saisir les %d valeurs : \n", N);        for(int i=0;i<N;i++){            //scanf("%f", ptr[i]);            scanf("%f", tab+i);        }        printf("La moyenne est : %f", min_floats(tab , N));    }}
float average(float* tab, int longueur){ float somme=0.0;float moyenne=0.0;      for (int i=0 ; i< longueur ; i++)      {          somme += *(tab+i);                }      moyenne = (somme) / longueur;    return moyenne;    }
float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    average = average / n_values;    return average;}
#include <stdio.h>float average(float* values, int n_values) {    float min=-1;    if(values!=NULL && n_values>0){        //min=values[0];        somme = *values;        for(int i=1;i<n_values;i++){            somme = somme + n_values;        }    }    moy = somme / n_values;    return moy;}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    average = average / n_values;    return average;}
float average(float* values, int n_values) {    float moy,tot;    for (i=0;i=>n_values;i++){        tot = tot+(values +i);    }    moy = tot/n_values;    return moy;}
#include <stdio.h>float average(float* values, int n_values) {    float min=-1;    if(values!=NULL && n_values>0){        //min=values[0];        somme = *values;        for(int i=1;i<n_values;i++){            somme = somme + *(values+i);        }    }    moy = somme / n_values;    return moy;}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    average = average / n_values;    return average;}
float average(float* values, int n_values) {    float moy,tot;    for (i=0;i<n_values;i++){        tot = tot+(values +i);    }    moy = tot/n_values;    return moy;}
float average(float* values, int n_values) {    float moy,tot;    for (int i=0;i<n_values;i++){        tot = tot+(values +i);    }    moy = tot/n_values;    return moy;}
float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    average = average / n_values;    return average;}
float average(float* values, int n_values) {    float moy,tot;    for (int i=0;i<n_values;i++){        tot = tot + (values +i);    }    moy = tot/n_values;    return moy;}
float average(float* values, int n_values) {    float moy,tot;    for (int i=0;i<n_values;i++){        tot = tot + *(values +i);    }    moy = tot/n_values;    return moy;}
float average(float* values, int n_values) {    float average=0;    i = 0    for (i<n_values,i++){        if (values)    }        }
#include stdio.hint float average(float*values,int n_values);scanf
float average(float* values, int n_values) {    float moy,tot;    for (int i=1;i<n_values;i++){        tot = tot + *(values +i);    }    moy = tot/n_values;    return moy;}
float average(float* values, int n_values) {    float moy,tot;    for (int i=0;i<n_values;i++){        tot = tot + *(values +i);    }    moy = tot/n_values;    return moy;}
float average(float* values, int n_values) {    float moy,tot;    tot = 0    for (int i=0;i<n_values;i++){        tot = tot + *(values +i);    }    moy = tot/n_values;    return moy;}
float average(float* values, int n_values) {    float moy,tot;    tot = 0;    for (int i=0;i<n_values;i++){        tot = tot + *(values +i);    }    moy = tot/n_values;    return moy;}
float min_floats(float* values, int n_values);void test_min_floats(){       int N;       printf("saisir le nombre d'elements : ");       scanf("%d",&N);       // on va creer un tableau de taille N de float        float * tab = (float *)malloc(N*sizeof(float));       if(tab==NULL){            printf("Pas de mémoire disponbile !! erreur");        }else{            printf("saisir les %d valeurs :", N);            for(int i=0;i<N;i++){                scanf("%f", (tab+i));            }            printf("Le min est : %f", min_floats(tab , N));        }}float min_floats(float* values, int n_values) {    float min=-1.0;   if(values!=NULL && n_values>0){        min = *values;        for(int i=1;i<n_values;i++){            if(*(values+i) <min)                min = *(values+i);        }    }    return min;}
float average(float* values, int n_values) {    float moy=0;    i = 0    for (i<n_values,i++){        if (values!= NULL){            moy = moy + *(values+i);        }    }    moy = moy / n_values;    return average;}
float average(float* values, int n_values) {    float moy=0;    int i = 0    for (i<n_values,i++){        if (values!= NULL){            moy = moy + *(values+i);        }    }    moy = moy / n_values;    return average;}
float average(float* values, int n_values) {    float moy=0;        for (i<n_values,i++){        int i = 0        if (values!= NULL){            moy = moy + *(values+i);        }    }    moy = moy / n_values;    return average;}
float average(float* values, int n_values) {    float moy=0;        for (int=0; i<n_values,i++){        if (values!= NULL){            moy = moy + *(values+i);        }    }    moy = moy / n_values;    return average;}
float average(float* values, int n_values) {    float moy=0;        for (int=0; i<n_values,i++){        if (values!= NULL){            moy = moy + *(values+i);        }    }    moy = moy / n_values;    return moy;}
float average(float* values, int n_values) {    float moy=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            moy = moy + *(values+i);        }    }    moy = moy / n_values;    return moy;}
float average(float* values, int n_values){    float tab[10];    for(int )}
float average(float* values, int n_values){    float tab[10];    for(int i=1; i<;i++);}
float average(float* values, int n_values){    int i,somme;    float moyenne;         somme = 0;         for(i=1;i<n_values;i++)    {        somme = somme + *(values +i)     }    moyenne = somme/n_values;         return moyenne;}
float average(float* values, int n_values){    int i,somme;    float moyenne;         somme = 0;         for(i=1;i<n_values;i++)    {        somme = somme + *(values +i);    }    moyenne = somme/n_values;         return moyenne;}
float average(float* values, int n_values){n_values=1;    for (i = 0; i <n ; values++) {        printf("Valeur %d:",i+1);         scanf("%d", &tab[i]);    }    somme=0.0;        for (i=0; i<n,result; values++){         a=somme/lenght;         b=a/n_values;     }    return 0;
float average(float* values, int n_values){    float somme,moyenne;         somme = 0;         for(int i=0;i<n_values;i++)    {        somme = somme + *(values +i);    }    moyenne = somme/n_values;         return moyenne;}
float average(float* values, int n_values){n_values=1;    for (i = 0; i <n ; i++) {        printf("Valeur %d:",i+1);         scanf("%d", &tab[i]);    }    somme=0.0;        for (i=0; i<n,result; i++){         a=somme/lenght;         b=a/n_values;     }    return b;}
float average(float* values, int n_values){n_values=1;    for (i = 0; i <n ; i++) {        printf("Valeur %d:",i+1);         scanf("%d", &tab[i]);    }    somme=0.0;        for (i=0; i<n,result; i++){         a=somme/lenght;         b=a/n_values;     }    return b;}
float average(float* values, int n_values)void average(){n_values=1;    for (i = 0; i <n ; i++) {        printf("Valeur %d:",i+1);         scanf("%d", &tab[i]);    }    somme=0.0;        for (i=0; i<n,result; i++){         a=somme/lenght;         b=a/n_values;     }    return b;}
float average(float* values, int n_values)void average(){n_values=1;int  N;printf("saisir le nombre d'elements");scanf("%d", &N)       float * tab = (float *)malloc(N*sizeof(float));       if(tab==NULL){            printf("!! erreur");        }else{            printf("saisir les %d valeurs :", N);            for(int i=0;i<N;i++){                scanf("%f", (tab+i));            }    for (i = 0; i <n ; i++) {        printf("Valeur %d:",i+1);         scanf("%d", &tab[i]);        }    somme=0.0;        for (i=0; i<n,result; i++){         a=somme/lenght;         b=a/n_values;     }    return b;}
float average(float* values, int n_values)void average(){n_values=1;int  N;printf("saisir le nombre d'elements");scanf("%d", &N)       float * tab = (float *)malloc(N*sizeof(float));       if(tab==NULL){            printf("!! erreur");        }else{            printf("saisir les %d valeurs :", N);            for(int i=0;i<N;i++){                scanf("%f", (tab+i));            }    for (i = 0; i <n ; i++) {        printf("Valeur %d:",i+1);         scanf("%d", &tab[i]);        }    somme=0.0;        for (i=0; i<n,result; i++){         a=somme/lenght;         b=a/n_values;     }    return b;}
float average(float* values, int n_values)void average(){n_values=1;int  values;printf("saisir le nombre d'elements");scanf("%d", &values)       float * tab = (float *)malloc(values*sizeof(float));       if(tab==NULL){            printf("!! erreur");        }        else{            printf("saisir les %d valeurs :", values);            for(int i=0;i<values;i++){                scanf("%f", (tab+i));            }       }    somme=0.0;        for (i=0; i<values,result; i++){         a=somme/lenght;         b=a/n_values;     }    return b;}
float average(float* values, int n_values)void average(){n_values=1;int  values;printf("saisir le nombre d'elements");scanf("%d", &values)       float * tab = (float *)malloc(values*sizeof(float));       if(tab==NULL){            printf("erreur");        }        else{            printf("saisir les %d valeurs :", values);            for(int i=0;i<values;i++){                scanf("%f", (tab+i));            }       }    somme=0.0;        for (i=0; i<values,result; i++){         a=somme/lenght;         b=a/n_values;     }    return b;}
float average(float* values, int n_values) {    float moy,tot;    tot = 0;    for (int i=0;i<n_values;i++){        tot = tot + *(values +i);    }    moy = tot/n_values;    return moy;}
#include <stdio.h>float average() {    int i, n;    float Tab[100], moy;    printf("entrez une taille logique");    scanf("%d",&n);    for (i=1; i<=n; i++) {        printf("entrer la valeur %d", i);        scanf("%d", &Tab[i]);    }    moy = 0;    for (i=1; i<=n; i++) {        moy = moy + Tab[i]    }    moy = moy / n    
#include <stdio.h>float average() {    int i, n;    float Tab[100], moy;    printf("entrez une taille logique");    scanf("%d",&n);    for (i=1; i<=n; i++) {        printf("entrer la valeur %d", i);        scanf("%d", &Tab[i]);    }    moy = 0;    for (i=1; i<=n; i++) {        moy = moy + Tab[i]    }    moy = moy / n    printf("la moyenne des valeurs du tableau est :%n",)
float min_floats(float* values, int n_values){    float min;    if (values != NULL)    {     min = *values;    }    for (int i = 1; i < n_values; i++)    {        if (*(values+i) < min)        {            min = *(values+i);        }    }    return min;}void test_min_floats(){    int n, i;    printf("Nombre d'elements : ");    scanf("%d", &n);    float *tab = (float*) malloc(n * sizeof(float));    if (tab == NULL)    {        printf("Pas de mÃ©moire disponible ! Erreur !");    }    else     {        printf("Valeur : ");        for (i = 0; i < n; i++)        {            scanf("%f", tab+i);        }        printf("Minimum du tableau : %f", min_floats(tab, n));    }}
float average(float* values, int n_values);float average(float* values, int n_values){    int i ;    float moy=*values;    for(i=0;i<n_values;i++){      moy=moy+*(values+i);    }    moy=moy/n_values;    return moy;}
float average(float* values, int n_values);float average(float* values, int n_values){    int i ;    float moy=*values;    for(i=0;i<n_values;i++){      moy=moy+*(values+i);    }    moy=moy/i;    return moy;}
float average(float* values, int n_values);float average(float* values, int n_values){    int i ;    float moy=*values;    for(i=1;i<n_values;i++){      moy=moy+*(values+i);    }    moy=moy/i;    return moy;}
float average(float* values, int n_values);float average(float* values, int n_values){    int i ;    float moy=*values;    for(i=1;i<n_values;i++){      moy=moy+*(values+i);    }    moy=moy/i;    return moy;}
#include <stdio.h>float average(float* values, int n_values) {    float average=0;    for (int i = 0; i < n_values; i++)    {        if (values != NULL)        {            average = average + *(values+i);        }    }    average = average / n_values;    return average;}
float average(float*values, int n_values){    float sum = 0;    for (int i=0; i<n_values; i++)        sum+= *(values+i);    float moy = sum/n_values;    return moy;}int size= 5;    float *t = (float *) malloc (size * sizeof (float));    *(t+0) = 1;    *(t+1) = 2;    *(t+2) = 3;    *(t+3) = 5;    *(t+4) = 9;float moyenne = average(t, size);printf("%f\n", moyenne);
float average(float*values, int n_values){    float sum = 0;    for (int i=0; i<n_values; i++)        sum+= *(values+i);    float moy = sum/n_values;    return moy;}int size= 5;    float *t = (float *) malloc (size * sizeof (float));    *(t+0) = 1;    *(t+1) = 2;    *(t+2) = 3;    *(t+3) = 5;    *(t+4) = 9;float moyenne = average(t, size);printf("%f\n", moyenne);
float average(float*values, int n_values){    float sum = 0;    for (int i=0; i<n_values; i++)        sum+= *(values+i);    float moy = sum/n_values;    return moy;}int size= 5;float *t = (float *) malloc (size * sizeof (float));*(t+0) = 1;*(t+1) = 2;*(t+2) = 3;*(t+3) = 5;*(t+4) = 9;float moyenne = average(t, size);printf("%f \n", moyenne);
float min_floats(float* values, int n_values){    if(values != NULL && n_values>0)    {        float min = 1;        for (int i = 0; i < n_values; ++i)        {            if  (*(values+1)<min)            {                min *= *(values+1);            }        }                return min/n_values;    }}
